@model MeiHi.Admin.Models.Service.CreateServiceModel

@{
    ViewBag.Title = "创建服务";
}

<h2>创建服务</h2>


@using (Html.BeginForm("SaveService", "Shop", FormMethod.Post, new { enctype = "multipart/form-data", id = "form2" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" id="ShopId" name="ShopId" value="@Model.ShopId" /> >
        <div class="form-group">
            <label class="control-label col-md-2">ServiceType</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ServiceTypeId, Model.ServiceTypeLists)
            </div>
        </div>

        @*上传店铺的品牌图片*@
        <div class="form-group">
            <label for="file" class="control-label col-md-2">上传服务Title图片一张</label>
            <div class="col-md-10">
                <input type="file" multiple="multiple" name="serviceTitleUrl" id="serviceTitleUrl" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Detail, 10,200,new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CMUnitCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CMUnitCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CMUnitCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OriginalUnitCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OriginalUnitCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OriginalUnitCost, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.PurchaseNotes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchaseNotes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PurchaseNotes, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            两个类型举例：设计师_初级理发师_教导主任_总设计师_导师|0_10_20_30|0_20_30_40,性别_男_女|0_10|0_20 （这里有2个类型，4个设计师，2个性别，价格组合有4 * 2 = 8个）
            一个类型举例：男导师_女导师|10_0|20_0
            每个规则由逗号分隔，每个再根据‘|’分隔，第一个是类型列表，第二个是美嗨+价，第三个是原+价
            @*<input type="button" id="btnAddDesinger" value="增加设计者"/>
            <label>类型</label><input type="text" value="设计师"/>*@
            @Html.LabelFor(model => model.Designer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Designer,10,200, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Designer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IfSupportRealTimeRefund, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IfSupportRealTimeRefund, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IfSupportRealTimeRefund, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="提交" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回服务管理", "ShowServicesByShopId", new { shopId = Model.ShopId })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
