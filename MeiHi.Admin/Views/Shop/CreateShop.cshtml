@model MeiHi.Admin.Models.CreateShopMpdel

@{
    ViewBag.Title = "CreateShop";
}
<h2>CreateShop</h2>
<script src="~/Scripts/Shop/Shop.js"></script>
@using (Html.BeginForm("SaveShop", "Shop", FormMethod.Post, new { enctype = "multipart/form-data", id = "form2" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CreateShopMpdel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">RegionName</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RegionId, Model.RegionNameList)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DetailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DetailAddress, new { htmlAttributes = new { @class = "form-control", @id = "text_", @onchange = "searchByStationName();" } })
                @Html.ValidationMessageFor(model => model.DetailAddress, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Coordinates, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Coordinates, new { htmlAttributes = new { @class = "form-control", @id = "result_" } })
                @Html.ValidationMessageFor(model => model.Coordinates, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contract, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contract, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contract, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsHot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsHot)
                    @Html.ValidationMessageFor(model => model.IsHot, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsOnline, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsOnline)
                    @Html.ValidationMessageFor(model => model.IsOnline, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        @*如果有分店就填写主店铺名字（必须完全一致），否则就不要写*@
        <div class="form-group">
            @Html.LabelFor(model => model.ParentShopName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ParentShopName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ParentShopName, "", new { @class = "text-danger" })
            </div>
        </div>

        @*产品*@
        <div class="form-group">
            <label for="file" class="control-label col-md-2">上传店铺品牌图片</label>
            <div class="col-md-10">
                <input type="file" name="ProductBrandFile" id="fileToUpload2" multiple="multiple" />
            </div>
        </div>

        @*店铺*@
        <div class="form-group">
            <label for="file" class="control-label col-md-2">上传店铺图片</label>
            <div class="col-md-10">
                <input type="file" name="shopProductFile" id="fileToUpload3" multiple="multiple" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseNotes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchaseNotes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PurchaseNotes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShopTag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShopTag, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShopTag, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ShopManege")
</div>
