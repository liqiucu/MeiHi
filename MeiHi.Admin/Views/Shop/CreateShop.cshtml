@model MeiHi.Admin.Models.CreateShopMpdel

@{
    ViewBag.Title = "创建店铺";
}
<h2>创建店铺</h2>
<script src="~/Scripts/Region/Region.js"></script>
<script src="~/Scripts/Shop/Shop.js"></script>
@using (Html.BeginForm("CreateShop", "Shop", FormMethod.Post, new { enctype = "multipart/form-data", id = "form2" }))
{
    @Html.AntiForgeryToken()
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="container">
        <div class="row">
             
            <div class="col-md-6">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2">区域</label>
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.RegionId, Model.RegionNameList)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2">街道</label>
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.StreetId, Model.StreetNameList)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.DetailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DetailAddress, new { htmlAttributes = new { @class = "form-control", @id = "text_", @onchange = "searchByStationName();" } })
                            @Html.ValidationMessageFor(model => model.DetailAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Coordinates, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Coordinates, new { htmlAttributes = new { @class = "form-control", @id = "result_" } })
                            @Html.ValidationMessageFor(model => model.Coordinates, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.IsHot, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsHot)
                                @Html.ValidationMessageFor(model => model.IsHot, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsOnline, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsOnline)
                                @Html.ValidationMessageFor(model => model.IsOnline, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Comment, 10, 200, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <input type="hidden" name="ParentShopId" value="@Model.ParentShopId" />
                    @*如果有分店就填写主店铺名字（必须完全一致），否则就不要写*@
                    @*<div class="form-group">
                            @Html.LabelFor(model => model.ParentShopName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ParentShopName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ParentShopName, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*产品*@
                    <div class="form-group">
                        <label for="file" class="control-label col-md-2">上传品牌图片</label>
                        <div class="col-md-10">
                            <input type="file" name="ProductBrandFile" id="fileToUpload2" multiple="multiple" />
                        </div>
                    </div>

                    @*店铺*@
                    <div class="form-group">
                        <label for="file" class="control-label col-md-2">上传店铺图片</label>
                        <div class="col-md-10">
                            <input type="file" name="shopProductFile" id="fileToUpload3" multiple="multiple" />
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PurchaseNotes, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.PurchaseNotes, 15, 200, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PurchaseNotes, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ShopTag, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ShopTag, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShopTag, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-horizontal">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Contract, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Contract, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Contract, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AliPayAccount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AliPayAccount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AliPayAccount, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.WinXinPayAccount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.WinXinPayAccount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WinXinPayAccount, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BankNo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BankNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BankNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <hr />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="提交" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回店铺管理", "ShopManege")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
