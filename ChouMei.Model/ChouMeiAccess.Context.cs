//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChouMei.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SiTuXiaoYuanEntities : DbContext
    {
        public SiTuXiaoYuanEntities()
            : base("name=SiTuXiaoYuanEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ActivityJob> ActivityJobs { get; set; }
        public virtual DbSet<ActivityJobApply> ActivityJobApplies { get; set; }
        public virtual DbSet<ActivityJobComplain> ActivityJobComplains { get; set; }
        public virtual DbSet<ActivityJobPosition> ActivityJobPositions { get; set; }
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<AdminLogon> AdminLogons { get; set; }
        public virtual DbSet<AdminPermission> AdminPermissions { get; set; }
        public virtual DbSet<AdminRole> AdminRoles { get; set; }
        public virtual DbSet<Advertising> Advertisings { get; set; }
        public virtual DbSet<AdvertisingPage> AdvertisingPages { get; set; }
        public virtual DbSet<AdvertisingPosition> AdvertisingPositions { get; set; }
        public virtual DbSet<AdvertisingType> AdvertisingTypes { get; set; }
        public virtual DbSet<AgentPermission> AgentPermissions { get; set; }
        public virtual DbSet<AgentRole> AgentRoles { get; set; }
        public virtual DbSet<AgentRoleAgentPermission> AgentRoleAgentPermissions { get; set; }
        public virtual DbSet<AgentUser> AgentUsers { get; set; }
        public virtual DbSet<AgentUserAgentPermission> AgentUserAgentPermissions { get; set; }
        public virtual DbSet<AgentUserAgentRole> AgentUserAgentRoles { get; set; }
        public virtual DbSet<AgentUserLogon> AgentUserLogons { get; set; }
        public virtual DbSet<AgentUserRegion> AgentUserRegions { get; set; }
        public virtual DbSet<AgentUserType> AgentUserTypes { get; set; }
        public virtual DbSet<AgentUserTypeAgentPermission> AgentUserTypeAgentPermissions { get; set; }
        public virtual DbSet<Application> Applications { get; set; }
        public virtual DbSet<ApplyStatu> ApplyStatus { get; set; }
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<CampusJob> CampusJobs { get; set; }
        public virtual DbSet<CampusJobApply> CampusJobApplies { get; set; }
        public virtual DbSet<CampusJobCategory> CampusJobCategories { get; set; }
        public virtual DbSet<CampusJobComplain> CampusJobComplains { get; set; }
        public virtual DbSet<CashOutStatu> CashOutStatus { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<CompanyCashFlow> CompanyCashFlows { get; set; }
        public virtual DbSet<CompanyCashFlowType> CompanyCashFlowTypes { get; set; }
        public virtual DbSet<CompanyCashIn> CompanyCashIns { get; set; }
        public virtual DbSet<CompanyLogon> CompanyLogons { get; set; }
        public virtual DbSet<ComplainStatu> ComplainStatus { get; set; }
        public virtual DbSet<Date> Dates { get; set; }
        public virtual DbSet<DeviceVersion> DeviceVersions { get; set; }
        public virtual DbSet<DownloadFromApplication> DownloadFromApplications { get; set; }
        public virtual DbSet<Email> Emails { get; set; }
        public virtual DbSet<EntityUpdate> EntityUpdates { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<EventLog> EventLogs { get; set; }
        public virtual DbSet<ExcelData> ExcelDatas { get; set; }
        public virtual DbSet<Feedback> Feedbacks { get; set; }
        public virtual DbSet<FilterActivityJob> FilterActivityJobs { get; set; }
        public virtual DbSet<FilterCampusJob> FilterCampusJobs { get; set; }
        public virtual DbSet<FilterGender> FilterGenders { get; set; }
        public virtual DbSet<FilterInternJob> FilterInternJobs { get; set; }
        public virtual DbSet<FilterRegion> FilterRegions { get; set; }
        public virtual DbSet<FilterServiceJob> FilterServiceJobs { get; set; }
        public virtual DbSet<FilterTutorJob> FilterTutorJobs { get; set; }
        public virtual DbSet<FilterWorkTime> FilterWorkTimes { get; set; }
        public virtual DbSet<InternJob> InternJobs { get; set; }
        public virtual DbSet<InternJobApply> InternJobApplies { get; set; }
        public virtual DbSet<InternJobCategory> InternJobCategories { get; set; }
        public virtual DbSet<InternJobComplain> InternJobComplains { get; set; }
        public virtual DbSet<JobAllocateType> JobAllocateTypes { get; set; }
        public virtual DbSet<JobAllocateTypeGroup> JobAllocateTypeGroups { get; set; }
        public virtual DbSet<JobApplyAbsentComplain> JobApplyAbsentComplains { get; set; }
        public virtual DbSet<JobApplyEndReason> JobApplyEndReasons { get; set; }
        public virtual DbSet<JobApplySignIn> JobApplySignIns { get; set; }
        public virtual DbSet<JobStatu> JobStatus { get; set; }
        public virtual DbSet<JobType> JobTypes { get; set; }
        public virtual DbSet<JobTypeRelation> JobTypeRelations { get; set; }
        public virtual DbSet<Marketer> Marketers { get; set; }
        public virtual DbSet<MarketerRegister> MarketerRegisters { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<MessageType> MessageTypes { get; set; }
        public virtual DbSet<NoticeBoard> NoticeBoards { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrderBy> OrderBies { get; set; }
        public virtual DbSet<OrderLine> OrderLines { get; set; }
        public virtual DbSet<PaymentNotify> PaymentNotifies { get; set; }
        public virtual DbSet<Permission> Permissions { get; set; }
        public virtual DbSet<Promoter> Promoters { get; set; }
        public virtual DbSet<PromoterLogon> PromoterLogons { get; set; }
        public virtual DbSet<PromoterRegistration> PromoterRegistrations { get; set; }
        public virtual DbSet<PromoterTeam> PromoterTeams { get; set; }
        public virtual DbSet<PromoterTeamMember> PromoterTeamMembers { get; set; }
        public virtual DbSet<Province> Provinces { get; set; }
        public virtual DbSet<Region> Regions { get; set; }
        public virtual DbSet<Register> Registers { get; set; }
        public virtual DbSet<RegisterBank> RegisterBanks { get; set; }
        public virtual DbSet<ResetPassword> ResetPasswords { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<RolePermission> RolePermissions { get; set; }
        public virtual DbSet<School> Schools { get; set; }
        public virtual DbSet<ServiceJob> ServiceJobs { get; set; }
        public virtual DbSet<ServiceJobApply> ServiceJobApplies { get; set; }
        public virtual DbSet<ServiceJobCategory> ServiceJobCategories { get; set; }
        public virtual DbSet<ServiceJobComplain> ServiceJobComplains { get; set; }
        public virtual DbSet<ServiceJobPosition> ServiceJobPositions { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<SystemMessage> SystemMessages { get; set; }
        public virtual DbSet<Term> Terms { get; set; }
        public virtual DbSet<Trade> Trades { get; set; }
        public virtual DbSet<TutorJob> TutorJobs { get; set; }
        public virtual DbSet<TutorJobApply> TutorJobApplies { get; set; }
        public virtual DbSet<TutorJobComplain> TutorJobComplains { get; set; }
        public virtual DbSet<TutorJobLevel> TutorJobLevels { get; set; }
        public virtual DbSet<TutorJobPaper> TutorJobPapers { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserAccount> UserAccounts { get; set; }
        public virtual DbSet<UserCashIn> UserCashIns { get; set; }
        public virtual DbSet<UserCashOut> UserCashOuts { get; set; }
        public virtual DbSet<UserFavoriteJob> UserFavoriteJobs { get; set; }
        public virtual DbSet<UserLogon> UserLogons { get; set; }
        public virtual DbSet<WageUnit> WageUnits { get; set; }
        public virtual DbSet<WebCompanyLogon> WebCompanyLogons { get; set; }
        public virtual DbSet<WebUserLogon> WebUserLogons { get; set; }
        public virtual DbSet<view_agentuser_promoter_right> view_agentuser_promoter_right { get; set; }
        public virtual DbSet<view_job> view_job { get; set; }
        public virtual DbSet<view_job_apply> view_job_apply { get; set; }
        public virtual DbSet<view_jobtype_jobsubtype> view_jobtype_jobsubtype { get; set; }
        public virtual DbSet<view_promoter_daily> view_promoter_daily { get; set; }
        public virtual DbSet<view_promoter_monthly> view_promoter_monthly { get; set; }
        public virtual DbSet<view_promoter_total> view_promoter_total { get; set; }
        public virtual DbSet<view_promoter_weekly> view_promoter_weekly { get; set; }
        public virtual DbSet<view_report_get_promoter_creator> view_report_get_promoter_creator { get; set; }
    
        [DbFunction("SiTuXiaoYuanEntities", "fn_split_string_by")]
        public virtual IQueryable<fn_split_string_by_Result> fn_split_string_by(string str, string split)
        {
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            var splitParameter = split != null ?
                new ObjectParameter("split", split) :
                new ObjectParameter("split", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_split_string_by_Result>("[SiTuXiaoYuanEntities].[fn_split_string_by](@str, @split)", strParameter, splitParameter);
        }
    
        public virtual int admin_create_admin(Nullable<int> roleId, string username, string password, string salt, string permissions)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            var permissionsParameter = permissions != null ?
                new ObjectParameter("Permissions", permissions) :
                new ObjectParameter("Permissions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("admin_create_admin", roleIdParameter, usernameParameter, passwordParameter, saltParameter, permissionsParameter);
        }
    
        public virtual int admin_create_city_agent_user(string regions, string username, string password, string salt)
        {
            var regionsParameter = regions != null ?
                new ObjectParameter("Regions", regions) :
                new ObjectParameter("Regions", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("admin_create_city_agent_user", regionsParameter, usernameParameter, passwordParameter, saltParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> admin_create_promoter(Nullable<int> adminId, string username, string password, string salt)
        {
            var adminIdParameter = adminId.HasValue ?
                new ObjectParameter("AdminId", adminId) :
                new ObjectParameter("AdminId", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("admin_create_promoter", adminIdParameter, usernameParameter, passwordParameter, saltParameter);
        }
    
        public virtual int admin_create_role(Nullable<int> roleId, string role, string permissions)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            var permissionsParameter = permissions != null ?
                new ObjectParameter("permissions", permissions) :
                new ObjectParameter("permissions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("admin_create_role", roleIdParameter, roleParameter, permissionsParameter);
        }
    
        public virtual int admin_edit_admin(Nullable<int> adminId, Nullable<int> roleId, string username, string permissions)
        {
            var adminIdParameter = adminId.HasValue ?
                new ObjectParameter("AdminId", adminId) :
                new ObjectParameter("AdminId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var permissionsParameter = permissions != null ?
                new ObjectParameter("Permissions", permissions) :
                new ObjectParameter("Permissions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("admin_edit_admin", adminIdParameter, roleIdParameter, usernameParameter, permissionsParameter);
        }
    
        public virtual int admin_edit_city_agent(Nullable<int> userId, string regions, string username)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var regionsParameter = regions != null ?
                new ObjectParameter("Regions", regions) :
                new ObjectParameter("Regions", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("admin_edit_city_agent", userIdParameter, regionsParameter, usernameParameter);
        }
    
        public virtual int admin_edit_role(Nullable<int> roleId, string rolename, string permissions)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var rolenameParameter = rolename != null ?
                new ObjectParameter("Rolename", rolename) :
                new ObjectParameter("Rolename", typeof(string));
    
            var permissionsParameter = permissions != null ?
                new ObjectParameter("Permissions", permissions) :
                new ObjectParameter("Permissions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("admin_edit_role", roleIdParameter, rolenameParameter, permissionsParameter);
        }
    
        public virtual ObjectResult<admin_get_admin_list_Result> admin_get_admin_list(Nullable<int> roleId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string searchText)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_admin_list_Result>("admin_get_admin_list", roleIdParameter, dateFromParameter, dateToParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<admin_get_admin_permission_Result> admin_get_admin_permission(Nullable<int> adminId)
        {
            var adminIdParameter = adminId.HasValue ?
                new ObjectParameter("AdminId", adminId) :
                new ObjectParameter("AdminId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_admin_permission_Result>("admin_get_admin_permission", adminIdParameter);
        }
    
        public virtual ObjectResult<admin_get_available_agent_root_regions_Result> admin_get_available_agent_root_regions(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_available_agent_root_regions_Result>("admin_get_available_agent_root_regions", userIdParameter);
        }
    
        public virtual ObjectResult<admin_get_business_approved_job_list_Result> admin_get_business_approved_job_list(Nullable<long> companyId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> jobTypeId, string regionIds, Nullable<int> regionId, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_business_approved_job_list_Result>("admin_get_business_approved_job_list", companyIdParameter, dateFromParameter, dateToParameter, jobTypeIdParameter, regionIdsParameter, regionIdParameter, recommendedParameter, stickyParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<admin_get_business_pending_approve_job_list_Result> admin_get_business_pending_approve_job_list(Nullable<long> companyId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> jobTypeId, string regionIds, Nullable<int> regionId, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_business_pending_approve_job_list_Result>("admin_get_business_pending_approve_job_list", companyIdParameter, dateFromParameter, dateToParameter, jobTypeIdParameter, regionIdsParameter, regionIdParameter, recommendedParameter, stickyParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<admin_get_business_undercarriage_job_list_Result> admin_get_business_undercarriage_job_list(Nullable<long> companyId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> jobTypeId, string regionIds, Nullable<int> regionId, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_business_undercarriage_job_list_Result>("admin_get_business_undercarriage_job_list", companyIdParameter, dateFromParameter, dateToParameter, jobTypeIdParameter, regionIdsParameter, regionIdParameter, recommendedParameter, stickyParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<admin_get_city_agent_list_Result> admin_get_city_agent_list(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string searchText)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_city_agent_list_Result>("admin_get_city_agent_list", dateFromParameter, dateToParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<admin_get_enterprise_info_Result> admin_get_enterprise_info(Nullable<int> userId, string companyName, string mobile, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string regionIds, Nullable<int> regionId, Nullable<bool> verified, Nullable<bool> balance, Nullable<bool> status, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var verifiedParameter = verified.HasValue ?
                new ObjectParameter("Verified", verified) :
                new ObjectParameter("Verified", typeof(bool));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("Balance", balance) :
                new ObjectParameter("Balance", typeof(bool));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_enterprise_info_Result>("admin_get_enterprise_info", userIdParameter, companyNameParameter, mobileParameter, dateFromParameter, dateToParameter, regionIdsParameter, regionIdParameter, verifiedParameter, balanceParameter, statusParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<admin_get_job_list_Result> admin_get_job_list(Nullable<int> userId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_job_list_Result>("admin_get_job_list", userIdParameter, dateFromParameter, dateToParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<admin_get_job_list_approved_Result> admin_get_job_list_approved(Nullable<long> companyId, string keyword, Nullable<int> jobTypeId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_job_list_approved_Result>("admin_get_job_list_approved", companyIdParameter, keywordParameter, jobTypeIdParameter);
        }
    
        public virtual ObjectResult<admin_get_job_list_new_Result> admin_get_job_list_new()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_job_list_new_Result>("admin_get_job_list_new");
        }
    
        public virtual ObjectResult<admin_get_marketer_stats_Result> admin_get_marketer_stats()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_marketer_stats_Result>("admin_get_marketer_stats");
        }
    
        public virtual ObjectResult<admin_get_normal_job_list_Result> admin_get_normal_job_list(string companyName, string mobile, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> jobTypeId, string regionIds, Nullable<int> regionId, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_normal_job_list_Result>("admin_get_normal_job_list", companyNameParameter, mobileParameter, dateFromParameter, dateToParameter, jobTypeIdParameter, regionIdsParameter, regionIdParameter, recommendedParameter, stickyParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<admin_get_promoter_list_Result> admin_get_promoter_list(Nullable<int> adminId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string promoterName)
        {
            var adminIdParameter = adminId.HasValue ?
                new ObjectParameter("AdminId", adminId) :
                new ObjectParameter("AdminId", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var promoterNameParameter = promoterName != null ?
                new ObjectParameter("PromoterName", promoterName) :
                new ObjectParameter("PromoterName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_promoter_list_Result>("admin_get_promoter_list", adminIdParameter, dateFromParameter, dateToParameter, promoterNameParameter);
        }
    
        public virtual ObjectResult<admin_get_role_list_Result> admin_get_role_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_role_list_Result>("admin_get_role_list");
        }
    
        public virtual ObjectResult<admin_get_role_permission_Result> admin_get_role_permission(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_role_permission_Result>("admin_get_role_permission", roleIdParameter);
        }
    
        public virtual ObjectResult<admin_get_root_regions_Result> admin_get_root_regions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_root_regions_Result>("admin_get_root_regions");
        }
    
        public virtual ObjectResult<admin_get_undercarriage_job_list_Result> admin_get_undercarriage_job_list(string companyName, string mobile, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> jobTypeId, string regionIds, Nullable<int> regionId, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_undercarriage_job_list_Result>("admin_get_undercarriage_job_list", companyNameParameter, mobileParameter, dateFromParameter, dateToParameter, jobTypeIdParameter, regionIdsParameter, regionIdParameter, recommendedParameter, stickyParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<admin_get_user_apply_Result> admin_get_user_apply()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_user_apply_Result>("admin_get_user_apply");
        }
    
        public virtual ObjectResult<admin_get_user_cash_in_Result> admin_get_user_cash_in(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_user_cash_in_Result>("admin_get_user_cash_in", userIdParameter);
        }
    
        public virtual ObjectResult<admin_get_user_cash_out_Result> admin_get_user_cash_out(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_user_cash_out_Result>("admin_get_user_cash_out", userIdParameter);
        }
    
        public virtual ObjectResult<admin_get_user_info_Result> admin_get_user_info(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_user_info_Result>("admin_get_user_info", userIdParameter);
        }
    
        public virtual ObjectResult<admin_get_useraccount_Result> admin_get_useraccount(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_get_useraccount_Result>("admin_get_useraccount", userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> admin_has_permission(Nullable<int> adminId, string requiredPermission)
        {
            var adminIdParameter = adminId.HasValue ?
                new ObjectParameter("AdminId", adminId) :
                new ObjectParameter("AdminId", typeof(int));
    
            var requiredPermissionParameter = requiredPermission != null ?
                new ObjectParameter("RequiredPermission", requiredPermission) :
                new ObjectParameter("RequiredPermission", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("admin_has_permission", adminIdParameter, requiredPermissionParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> admin_has_role(Nullable<int> adminId, string requiredRole)
        {
            var adminIdParameter = adminId.HasValue ?
                new ObjectParameter("AdminId", adminId) :
                new ObjectParameter("AdminId", typeof(int));
    
            var requiredRoleParameter = requiredRole != null ?
                new ObjectParameter("RequiredRole", requiredRole) :
                new ObjectParameter("RequiredRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("admin_has_role", adminIdParameter, requiredRoleParameter);
        }
    
        public virtual int admin_message_cash_in(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("admin_message_cash_in", userIdParameter);
        }
    
        public virtual int admin_publish_activity_job(Nullable<int> agentUserId, string companyName, Nullable<long> companyId, string title, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<System.DateTime> stickyExpired, Nullable<int> positionId, Nullable<int> regionId, Nullable<int> wageUnitId, Nullable<decimal> wage, Nullable<bool> includeDinner, Nullable<bool> includeRoom, Nullable<bool> includeCommission, Nullable<int> termId, Nullable<int> gender, Nullable<decimal> deposit, Nullable<int> peopleRequired, string contact, string contactPhone, string address, Nullable<System.DateTime> workFrom, Nullable<System.DateTime> workEnd, string description, Nullable<bool> monMorning, Nullable<bool> tueMorning, Nullable<bool> wedMorning, Nullable<bool> thuMorning, Nullable<bool> friMorning, Nullable<bool> satMorning, Nullable<bool> sunMorning, Nullable<bool> monAfternoon, Nullable<bool> tueAfternoon, Nullable<bool> wedAfternoon, Nullable<bool> thuAfternoon, Nullable<bool> friAfternoon, Nullable<bool> satAfternoon, Nullable<bool> sunAfternoon, Nullable<bool> monNight, Nullable<bool> tueNight, Nullable<bool> wedNight, Nullable<bool> thuNight, Nullable<bool> friNight, Nullable<bool> satNight, Nullable<bool> sunNight)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var stickyExpiredParameter = stickyExpired.HasValue ?
                new ObjectParameter("StickyExpired", stickyExpired) :
                new ObjectParameter("StickyExpired", typeof(System.DateTime));
    
            var positionIdParameter = positionId.HasValue ?
                new ObjectParameter("PositionId", positionId) :
                new ObjectParameter("PositionId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var wageUnitIdParameter = wageUnitId.HasValue ?
                new ObjectParameter("WageUnitId", wageUnitId) :
                new ObjectParameter("WageUnitId", typeof(int));
    
            var wageParameter = wage.HasValue ?
                new ObjectParameter("Wage", wage) :
                new ObjectParameter("Wage", typeof(decimal));
    
            var includeDinnerParameter = includeDinner.HasValue ?
                new ObjectParameter("IncludeDinner", includeDinner) :
                new ObjectParameter("IncludeDinner", typeof(bool));
    
            var includeRoomParameter = includeRoom.HasValue ?
                new ObjectParameter("IncludeRoom", includeRoom) :
                new ObjectParameter("IncludeRoom", typeof(bool));
    
            var includeCommissionParameter = includeCommission.HasValue ?
                new ObjectParameter("IncludeCommission", includeCommission) :
                new ObjectParameter("IncludeCommission", typeof(bool));
    
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var depositParameter = deposit.HasValue ?
                new ObjectParameter("Deposit", deposit) :
                new ObjectParameter("Deposit", typeof(decimal));
    
            var peopleRequiredParameter = peopleRequired.HasValue ?
                new ObjectParameter("PeopleRequired", peopleRequired) :
                new ObjectParameter("PeopleRequired", typeof(int));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var contactPhoneParameter = contactPhone != null ?
                new ObjectParameter("ContactPhone", contactPhone) :
                new ObjectParameter("ContactPhone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var workFromParameter = workFrom.HasValue ?
                new ObjectParameter("WorkFrom", workFrom) :
                new ObjectParameter("WorkFrom", typeof(System.DateTime));
    
            var workEndParameter = workEnd.HasValue ?
                new ObjectParameter("WorkEnd", workEnd) :
                new ObjectParameter("WorkEnd", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("admin_publish_activity_job", agentUserIdParameter, companyNameParameter, companyIdParameter, titleParameter, recommendedParameter, stickyParameter, stickyExpiredParameter, positionIdParameter, regionIdParameter, wageUnitIdParameter, wageParameter, includeDinnerParameter, includeRoomParameter, includeCommissionParameter, termIdParameter, genderParameter, depositParameter, peopleRequiredParameter, contactParameter, contactPhoneParameter, addressParameter, workFromParameter, workEndParameter, descriptionParameter, monMorningParameter, tueMorningParameter, wedMorningParameter, thuMorningParameter, friMorningParameter, satMorningParameter, sunMorningParameter, monAfternoonParameter, tueAfternoonParameter, wedAfternoonParameter, thuAfternoonParameter, friAfternoonParameter, satAfternoonParameter, sunAfternoonParameter, monNightParameter, tueNightParameter, wedNightParameter, thuNightParameter, friNightParameter, satNightParameter, sunNightParameter);
        }
    
        public virtual int admin_publish_campus_job(Nullable<int> agentUserId, string companyName, Nullable<long> companyId, string title, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<System.DateTime> stickyExpired, Nullable<int> categoryId, Nullable<int> schoolId, Nullable<int> regionId, Nullable<int> gender, Nullable<int> peopleRequired, string contact, string contactPhone, string address, Nullable<System.DateTime> workFrom, Nullable<System.DateTime> workEnd, string description, Nullable<bool> monMorning, Nullable<bool> tueMorning, Nullable<bool> wedMorning, Nullable<bool> thuMorning, Nullable<bool> friMorning, Nullable<bool> satMorning, Nullable<bool> sunMorning, Nullable<bool> monAfternoon, Nullable<bool> tueAfternoon, Nullable<bool> wedAfternoon, Nullable<bool> thuAfternoon, Nullable<bool> friAfternoon, Nullable<bool> satAfternoon, Nullable<bool> sunAfternoon, Nullable<bool> monNight, Nullable<bool> tueNight, Nullable<bool> wedNight, Nullable<bool> thuNight, Nullable<bool> friNight, Nullable<bool> satNight, Nullable<bool> sunNight)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var stickyExpiredParameter = stickyExpired.HasValue ?
                new ObjectParameter("StickyExpired", stickyExpired) :
                new ObjectParameter("StickyExpired", typeof(System.DateTime));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var peopleRequiredParameter = peopleRequired.HasValue ?
                new ObjectParameter("PeopleRequired", peopleRequired) :
                new ObjectParameter("PeopleRequired", typeof(int));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var contactPhoneParameter = contactPhone != null ?
                new ObjectParameter("ContactPhone", contactPhone) :
                new ObjectParameter("ContactPhone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var workFromParameter = workFrom.HasValue ?
                new ObjectParameter("WorkFrom", workFrom) :
                new ObjectParameter("WorkFrom", typeof(System.DateTime));
    
            var workEndParameter = workEnd.HasValue ?
                new ObjectParameter("WorkEnd", workEnd) :
                new ObjectParameter("WorkEnd", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("admin_publish_campus_job", agentUserIdParameter, companyNameParameter, companyIdParameter, titleParameter, recommendedParameter, stickyParameter, stickyExpiredParameter, categoryIdParameter, schoolIdParameter, regionIdParameter, genderParameter, peopleRequiredParameter, contactParameter, contactPhoneParameter, addressParameter, workFromParameter, workEndParameter, descriptionParameter, monMorningParameter, tueMorningParameter, wedMorningParameter, thuMorningParameter, friMorningParameter, satMorningParameter, sunMorningParameter, monAfternoonParameter, tueAfternoonParameter, wedAfternoonParameter, thuAfternoonParameter, friAfternoonParameter, satAfternoonParameter, sunAfternoonParameter, monNightParameter, tueNightParameter, wedNightParameter, thuNightParameter, friNightParameter, satNightParameter, sunNightParameter);
        }
    
        public virtual int admin_publish_intern_job(Nullable<int> agentUserId, string companyName, Nullable<long> companyId, string title, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<System.DateTime> stickyExpired, Nullable<int> category, Nullable<int> regionId, Nullable<int> wageUnitId, Nullable<decimal> wage, Nullable<bool> includeDinner, Nullable<bool> includeRoom, Nullable<bool> includeCommission, Nullable<int> gender, Nullable<decimal> deposit, Nullable<int> peopleRequired, string contact, string contactPhone, string address, Nullable<System.DateTime> workFrom, Nullable<System.DateTime> workEnd, string description, Nullable<bool> monMorning, Nullable<bool> tueMorning, Nullable<bool> wedMorning, Nullable<bool> thuMorning, Nullable<bool> friMorning, Nullable<bool> satMorning, Nullable<bool> sunMorning, Nullable<bool> monAfternoon, Nullable<bool> tueAfternoon, Nullable<bool> wedAfternoon, Nullable<bool> thuAfternoon, Nullable<bool> friAfternoon, Nullable<bool> satAfternoon, Nullable<bool> sunAfternoon, Nullable<bool> monNight, Nullable<bool> tueNight, Nullable<bool> wedNight, Nullable<bool> thuNight, Nullable<bool> friNight, Nullable<bool> satNight, Nullable<bool> sunNight)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var stickyExpiredParameter = stickyExpired.HasValue ?
                new ObjectParameter("StickyExpired", stickyExpired) :
                new ObjectParameter("StickyExpired", typeof(System.DateTime));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var wageUnitIdParameter = wageUnitId.HasValue ?
                new ObjectParameter("WageUnitId", wageUnitId) :
                new ObjectParameter("WageUnitId", typeof(int));
    
            var wageParameter = wage.HasValue ?
                new ObjectParameter("Wage", wage) :
                new ObjectParameter("Wage", typeof(decimal));
    
            var includeDinnerParameter = includeDinner.HasValue ?
                new ObjectParameter("IncludeDinner", includeDinner) :
                new ObjectParameter("IncludeDinner", typeof(bool));
    
            var includeRoomParameter = includeRoom.HasValue ?
                new ObjectParameter("IncludeRoom", includeRoom) :
                new ObjectParameter("IncludeRoom", typeof(bool));
    
            var includeCommissionParameter = includeCommission.HasValue ?
                new ObjectParameter("IncludeCommission", includeCommission) :
                new ObjectParameter("IncludeCommission", typeof(bool));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var depositParameter = deposit.HasValue ?
                new ObjectParameter("Deposit", deposit) :
                new ObjectParameter("Deposit", typeof(decimal));
    
            var peopleRequiredParameter = peopleRequired.HasValue ?
                new ObjectParameter("PeopleRequired", peopleRequired) :
                new ObjectParameter("PeopleRequired", typeof(int));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var contactPhoneParameter = contactPhone != null ?
                new ObjectParameter("ContactPhone", contactPhone) :
                new ObjectParameter("ContactPhone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var workFromParameter = workFrom.HasValue ?
                new ObjectParameter("WorkFrom", workFrom) :
                new ObjectParameter("WorkFrom", typeof(System.DateTime));
    
            var workEndParameter = workEnd.HasValue ?
                new ObjectParameter("WorkEnd", workEnd) :
                new ObjectParameter("WorkEnd", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("admin_publish_intern_job", agentUserIdParameter, companyNameParameter, companyIdParameter, titleParameter, recommendedParameter, stickyParameter, stickyExpiredParameter, categoryParameter, regionIdParameter, wageUnitIdParameter, wageParameter, includeDinnerParameter, includeRoomParameter, includeCommissionParameter, genderParameter, depositParameter, peopleRequiredParameter, contactParameter, contactPhoneParameter, addressParameter, workFromParameter, workEndParameter, descriptionParameter, monMorningParameter, tueMorningParameter, wedMorningParameter, thuMorningParameter, friMorningParameter, satMorningParameter, sunMorningParameter, monAfternoonParameter, tueAfternoonParameter, wedAfternoonParameter, thuAfternoonParameter, friAfternoonParameter, satAfternoonParameter, sunAfternoonParameter, monNightParameter, tueNightParameter, wedNightParameter, thuNightParameter, friNightParameter, satNightParameter, sunNightParameter);
        }
    
        public virtual int admin_publish_service_job(Nullable<int> agentUserId, string companyName, Nullable<long> companyId, string title, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<System.DateTime> stickyExpired, Nullable<int> categoryId, Nullable<int> positionId, Nullable<int> regionId, Nullable<int> wageUnitId, Nullable<decimal> wage, Nullable<bool> includeDinner, Nullable<bool> includeRoom, Nullable<bool> includeCommission, Nullable<int> termId, Nullable<int> gender, Nullable<decimal> deposit, Nullable<int> peopleRequired, string contact, string contactPhone, string address, Nullable<System.DateTime> workFrom, Nullable<System.DateTime> workEnd, string description, Nullable<bool> monMorning, Nullable<bool> tueMorning, Nullable<bool> wedMorning, Nullable<bool> thuMorning, Nullable<bool> friMorning, Nullable<bool> satMorning, Nullable<bool> sunMorning, Nullable<bool> monAfternoon, Nullable<bool> tueAfternoon, Nullable<bool> wedAfternoon, Nullable<bool> thuAfternoon, Nullable<bool> friAfternoon, Nullable<bool> satAfternoon, Nullable<bool> sunAfternoon, Nullable<bool> monNight, Nullable<bool> tueNight, Nullable<bool> wedNight, Nullable<bool> thuNight, Nullable<bool> friNight, Nullable<bool> satNight, Nullable<bool> sunNight)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var stickyExpiredParameter = stickyExpired.HasValue ?
                new ObjectParameter("StickyExpired", stickyExpired) :
                new ObjectParameter("StickyExpired", typeof(System.DateTime));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var positionIdParameter = positionId.HasValue ?
                new ObjectParameter("PositionId", positionId) :
                new ObjectParameter("PositionId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var wageUnitIdParameter = wageUnitId.HasValue ?
                new ObjectParameter("WageUnitId", wageUnitId) :
                new ObjectParameter("WageUnitId", typeof(int));
    
            var wageParameter = wage.HasValue ?
                new ObjectParameter("Wage", wage) :
                new ObjectParameter("Wage", typeof(decimal));
    
            var includeDinnerParameter = includeDinner.HasValue ?
                new ObjectParameter("IncludeDinner", includeDinner) :
                new ObjectParameter("IncludeDinner", typeof(bool));
    
            var includeRoomParameter = includeRoom.HasValue ?
                new ObjectParameter("IncludeRoom", includeRoom) :
                new ObjectParameter("IncludeRoom", typeof(bool));
    
            var includeCommissionParameter = includeCommission.HasValue ?
                new ObjectParameter("IncludeCommission", includeCommission) :
                new ObjectParameter("IncludeCommission", typeof(bool));
    
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var depositParameter = deposit.HasValue ?
                new ObjectParameter("Deposit", deposit) :
                new ObjectParameter("Deposit", typeof(decimal));
    
            var peopleRequiredParameter = peopleRequired.HasValue ?
                new ObjectParameter("PeopleRequired", peopleRequired) :
                new ObjectParameter("PeopleRequired", typeof(int));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var contactPhoneParameter = contactPhone != null ?
                new ObjectParameter("ContactPhone", contactPhone) :
                new ObjectParameter("ContactPhone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var workFromParameter = workFrom.HasValue ?
                new ObjectParameter("WorkFrom", workFrom) :
                new ObjectParameter("WorkFrom", typeof(System.DateTime));
    
            var workEndParameter = workEnd.HasValue ?
                new ObjectParameter("WorkEnd", workEnd) :
                new ObjectParameter("WorkEnd", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("admin_publish_service_job", agentUserIdParameter, companyNameParameter, companyIdParameter, titleParameter, recommendedParameter, stickyParameter, stickyExpiredParameter, categoryIdParameter, positionIdParameter, regionIdParameter, wageUnitIdParameter, wageParameter, includeDinnerParameter, includeRoomParameter, includeCommissionParameter, termIdParameter, genderParameter, depositParameter, peopleRequiredParameter, contactParameter, contactPhoneParameter, addressParameter, workFromParameter, workEndParameter, descriptionParameter, monMorningParameter, tueMorningParameter, wedMorningParameter, thuMorningParameter, friMorningParameter, satMorningParameter, sunMorningParameter, monAfternoonParameter, tueAfternoonParameter, wedAfternoonParameter, thuAfternoonParameter, friAfternoonParameter, satAfternoonParameter, sunAfternoonParameter, monNightParameter, tueNightParameter, wedNightParameter, thuNightParameter, friNightParameter, satNightParameter, sunNightParameter);
        }
    
        public virtual int admin_publish_tutor_job(Nullable<int> agentUserId, string companyName, Nullable<long> companyId, string title, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<System.DateTime> stickyExpired, Nullable<int> levelId, Nullable<int> paperId, Nullable<int> regionId, Nullable<int> wageUnitId, Nullable<decimal> wage, Nullable<bool> includeDinner, Nullable<bool> includeRoom, Nullable<bool> includeCommission, Nullable<int> termId, Nullable<int> gender, Nullable<decimal> deposit, Nullable<int> peopleRequired, string contact, string contactPhone, string address, Nullable<System.DateTime> workFrom, Nullable<System.DateTime> workEnd, string description, Nullable<bool> monMorning, Nullable<bool> tueMorning, Nullable<bool> wedMorning, Nullable<bool> thuMorning, Nullable<bool> friMorning, Nullable<bool> satMorning, Nullable<bool> sunMorning, Nullable<bool> monAfternoon, Nullable<bool> tueAfternoon, Nullable<bool> wedAfternoon, Nullable<bool> thuAfternoon, Nullable<bool> friAfternoon, Nullable<bool> satAfternoon, Nullable<bool> sunAfternoon, Nullable<bool> monNight, Nullable<bool> tueNight, Nullable<bool> wedNight, Nullable<bool> thuNight, Nullable<bool> friNight, Nullable<bool> satNight, Nullable<bool> sunNight)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var stickyExpiredParameter = stickyExpired.HasValue ?
                new ObjectParameter("StickyExpired", stickyExpired) :
                new ObjectParameter("StickyExpired", typeof(System.DateTime));
    
            var levelIdParameter = levelId.HasValue ?
                new ObjectParameter("LevelId", levelId) :
                new ObjectParameter("LevelId", typeof(int));
    
            var paperIdParameter = paperId.HasValue ?
                new ObjectParameter("PaperId", paperId) :
                new ObjectParameter("PaperId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var wageUnitIdParameter = wageUnitId.HasValue ?
                new ObjectParameter("WageUnitId", wageUnitId) :
                new ObjectParameter("WageUnitId", typeof(int));
    
            var wageParameter = wage.HasValue ?
                new ObjectParameter("Wage", wage) :
                new ObjectParameter("Wage", typeof(decimal));
    
            var includeDinnerParameter = includeDinner.HasValue ?
                new ObjectParameter("IncludeDinner", includeDinner) :
                new ObjectParameter("IncludeDinner", typeof(bool));
    
            var includeRoomParameter = includeRoom.HasValue ?
                new ObjectParameter("IncludeRoom", includeRoom) :
                new ObjectParameter("IncludeRoom", typeof(bool));
    
            var includeCommissionParameter = includeCommission.HasValue ?
                new ObjectParameter("IncludeCommission", includeCommission) :
                new ObjectParameter("IncludeCommission", typeof(bool));
    
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var depositParameter = deposit.HasValue ?
                new ObjectParameter("Deposit", deposit) :
                new ObjectParameter("Deposit", typeof(decimal));
    
            var peopleRequiredParameter = peopleRequired.HasValue ?
                new ObjectParameter("PeopleRequired", peopleRequired) :
                new ObjectParameter("PeopleRequired", typeof(int));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var contactPhoneParameter = contactPhone != null ?
                new ObjectParameter("ContactPhone", contactPhone) :
                new ObjectParameter("ContactPhone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var workFromParameter = workFrom.HasValue ?
                new ObjectParameter("WorkFrom", workFrom) :
                new ObjectParameter("WorkFrom", typeof(System.DateTime));
    
            var workEndParameter = workEnd.HasValue ?
                new ObjectParameter("WorkEnd", workEnd) :
                new ObjectParameter("WorkEnd", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("admin_publish_tutor_job", agentUserIdParameter, companyNameParameter, companyIdParameter, titleParameter, recommendedParameter, stickyParameter, stickyExpiredParameter, levelIdParameter, paperIdParameter, regionIdParameter, wageUnitIdParameter, wageParameter, includeDinnerParameter, includeRoomParameter, includeCommissionParameter, termIdParameter, genderParameter, depositParameter, peopleRequiredParameter, contactParameter, contactPhoneParameter, addressParameter, workFromParameter, workEndParameter, descriptionParameter, monMorningParameter, tueMorningParameter, wedMorningParameter, thuMorningParameter, friMorningParameter, satMorningParameter, sunMorningParameter, monAfternoonParameter, tueAfternoonParameter, wedAfternoonParameter, thuAfternoonParameter, friAfternoonParameter, satAfternoonParameter, sunAfternoonParameter, monNightParameter, tueNightParameter, wedNightParameter, thuNightParameter, friNightParameter, satNightParameter, sunNightParameter);
        }
    
        public virtual ObjectResult<admin_search_user_info_Result> admin_search_user_info(string regionIds, string subRegionIds, Nullable<long> schoolRegionId, Nullable<long> regionId, Nullable<int> gender, Nullable<int> tallFrom, Nullable<int> tallTo, string mobile, string school, Nullable<System.DateTime> lastestLogonDateFrom, Nullable<System.DateTime> lastestLogonDateTo, Nullable<System.DateTime> createdDateFrom, Nullable<System.DateTime> createdDateTo, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var subRegionIdsParameter = subRegionIds != null ?
                new ObjectParameter("SubRegionIds", subRegionIds) :
                new ObjectParameter("SubRegionIds", typeof(string));
    
            var schoolRegionIdParameter = schoolRegionId.HasValue ?
                new ObjectParameter("SchoolRegionId", schoolRegionId) :
                new ObjectParameter("SchoolRegionId", typeof(long));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(long));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var tallFromParameter = tallFrom.HasValue ?
                new ObjectParameter("TallFrom", tallFrom) :
                new ObjectParameter("TallFrom", typeof(int));
    
            var tallToParameter = tallTo.HasValue ?
                new ObjectParameter("TallTo", tallTo) :
                new ObjectParameter("TallTo", typeof(int));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var schoolParameter = school != null ?
                new ObjectParameter("School", school) :
                new ObjectParameter("School", typeof(string));
    
            var lastestLogonDateFromParameter = lastestLogonDateFrom.HasValue ?
                new ObjectParameter("LastestLogonDateFrom", lastestLogonDateFrom) :
                new ObjectParameter("LastestLogonDateFrom", typeof(System.DateTime));
    
            var lastestLogonDateToParameter = lastestLogonDateTo.HasValue ?
                new ObjectParameter("LastestLogonDateTo", lastestLogonDateTo) :
                new ObjectParameter("LastestLogonDateTo", typeof(System.DateTime));
    
            var createdDateFromParameter = createdDateFrom.HasValue ?
                new ObjectParameter("CreatedDateFrom", createdDateFrom) :
                new ObjectParameter("CreatedDateFrom", typeof(System.DateTime));
    
            var createdDateToParameter = createdDateTo.HasValue ?
                new ObjectParameter("CreatedDateTo", createdDateTo) :
                new ObjectParameter("CreatedDateTo", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<admin_search_user_info_Result>("admin_search_user_info", regionIdsParameter, subRegionIdsParameter, schoolRegionIdParameter, regionIdParameter, genderParameter, tallFromParameter, tallToParameter, mobileParameter, schoolParameter, lastestLogonDateFromParameter, lastestLogonDateToParameter, createdDateFromParameter, createdDateToParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int admin_system_message_create(Nullable<int> adminId, string message, string content)
        {
            var adminIdParameter = adminId.HasValue ?
                new ObjectParameter("AdminId", adminId) :
                new ObjectParameter("AdminId", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("admin_system_message_create", adminIdParameter, messageParameter, contentParameter);
        }
    
        public virtual int admin_system_message_push_user(Nullable<int> adminId, Nullable<long> userId, string message, string content)
        {
            var adminIdParameter = adminId.HasValue ?
                new ObjectParameter("AdminId", adminId) :
                new ObjectParameter("AdminId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("admin_system_message_push_user", adminIdParameter, userIdParameter, messageParameter, contentParameter);
        }
    
        public virtual int admin_update_enterprise_user(Nullable<long> companyId, string fullName, string pendingFullName, string mobile, Nullable<int> regionId, string address, Nullable<bool> status, Nullable<bool> verified, Nullable<bool> balance, string email)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var pendingFullNameParameter = pendingFullName != null ?
                new ObjectParameter("PendingFullName", pendingFullName) :
                new ObjectParameter("PendingFullName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var verifiedParameter = verified.HasValue ?
                new ObjectParameter("Verified", verified) :
                new ObjectParameter("Verified", typeof(bool));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("Balance", balance) :
                new ObjectParameter("Balance", typeof(bool));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("admin_update_enterprise_user", companyIdParameter, fullNameParameter, pendingFullNameParameter, mobileParameter, regionIdParameter, addressParameter, statusParameter, verifiedParameter, balanceParameter, emailParameter);
        }
    
        public virtual int admin_update_password(Nullable<int> adminId, string hashedPassword, string salt)
        {
            var adminIdParameter = adminId.HasValue ?
                new ObjectParameter("AdminId", adminId) :
                new ObjectParameter("AdminId", typeof(int));
    
            var hashedPasswordParameter = hashedPassword != null ?
                new ObjectParameter("hashedPassword", hashedPassword) :
                new ObjectParameter("hashedPassword", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("salt", salt) :
                new ObjectParameter("salt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("admin_update_password", adminIdParameter, hashedPasswordParameter, saltParameter);
        }
    
        public virtual int agent_create_agent_user(Nullable<int> agentUserId, Nullable<int> roleId, string regions, string username, string password, string salt, string permissions)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var regionsParameter = regions != null ?
                new ObjectParameter("Regions", regions) :
                new ObjectParameter("Regions", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            var permissionsParameter = permissions != null ?
                new ObjectParameter("Permissions", permissions) :
                new ObjectParameter("Permissions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_create_agent_user", agentUserIdParameter, roleIdParameter, regionsParameter, usernameParameter, passwordParameter, saltParameter, permissionsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> agent_create_promoter(Nullable<int> agentUserId, string username, string password, string salt)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("agent_create_promoter", agentUserIdParameter, usernameParameter, passwordParameter, saltParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> agent_create_promoter_team(Nullable<int> promoterId, string teamName)
        {
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            var teamNameParameter = teamName != null ?
                new ObjectParameter("TeamName", teamName) :
                new ObjectParameter("TeamName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("agent_create_promoter_team", promoterIdParameter, teamNameParameter);
        }
    
        public virtual int agent_create_promoter_team_member(Nullable<int> teamId, Nullable<bool> isLeader, Nullable<long> userId)
        {
            var teamIdParameter = teamId.HasValue ?
                new ObjectParameter("TeamId", teamId) :
                new ObjectParameter("TeamId", typeof(int));
    
            var isLeaderParameter = isLeader.HasValue ?
                new ObjectParameter("IsLeader", isLeader) :
                new ObjectParameter("IsLeader", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_create_promoter_team_member", teamIdParameter, isLeaderParameter, userIdParameter);
        }
    
        public virtual int agent_create_role(Nullable<int> agentUserId, Nullable<int> roleId, string role, string permissions)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("agentUserId", agentUserId) :
                new ObjectParameter("agentUserId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            var permissionsParameter = permissions != null ?
                new ObjectParameter("permissions", permissions) :
                new ObjectParameter("permissions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_create_role", agentUserIdParameter, roleIdParameter, roleParameter, permissionsParameter);
        }
    
        public virtual int agent_create_sales_agent_user(Nullable<int> agentUserId, string regions, string username, string password, string salt, Nullable<int> promoterId, string permissions)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var regionsParameter = regions != null ?
                new ObjectParameter("Regions", regions) :
                new ObjectParameter("Regions", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            var permissionsParameter = permissions != null ?
                new ObjectParameter("Permissions", permissions) :
                new ObjectParameter("Permissions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_create_sales_agent_user", agentUserIdParameter, regionsParameter, usernameParameter, passwordParameter, saltParameter, promoterIdParameter, permissionsParameter);
        }
    
        public virtual int agent_delete_job(Nullable<long> jobId, Nullable<int> jobTypeId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_delete_job", jobIdParameter, jobTypeIdParameter);
        }
    
        public virtual int agent_delete_reptile_job(Nullable<long> jobId, Nullable<int> jobTypeId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_delete_reptile_job", jobIdParameter, jobTypeIdParameter);
        }
    
        public virtual int agent_edit_agent_user(Nullable<int> userId, Nullable<int> agentUserId, Nullable<int> roleId, string regions, string username, string permissions)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var regionsParameter = regions != null ?
                new ObjectParameter("Regions", regions) :
                new ObjectParameter("Regions", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var permissionsParameter = permissions != null ?
                new ObjectParameter("Permissions", permissions) :
                new ObjectParameter("Permissions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_edit_agent_user", userIdParameter, agentUserIdParameter, roleIdParameter, regionsParameter, usernameParameter, permissionsParameter);
        }
    
        public virtual int agent_edit_role(Nullable<int> agentUserId, Nullable<int> roleId, string rolename, string permissions)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var rolenameParameter = rolename != null ?
                new ObjectParameter("Rolename", rolename) :
                new ObjectParameter("Rolename", typeof(string));
    
            var permissionsParameter = permissions != null ?
                new ObjectParameter("Permissions", permissions) :
                new ObjectParameter("Permissions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_edit_role", agentUserIdParameter, roleIdParameter, rolenameParameter, permissionsParameter);
        }
    
        public virtual int agent_edit_sales_agent_user(Nullable<int> userId, Nullable<int> agentUserId, string regions, string username, Nullable<int> promoterId, string permissions)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var regionsParameter = regions != null ?
                new ObjectParameter("Regions", regions) :
                new ObjectParameter("Regions", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            var permissionsParameter = permissions != null ?
                new ObjectParameter("Permissions", permissions) :
                new ObjectParameter("Permissions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_edit_sales_agent_user", userIdParameter, agentUserIdParameter, regionsParameter, usernameParameter, promoterIdParameter, permissionsParameter);
        }
    
        public virtual ObjectResult<agent_get_activity_job_Result> agent_get_activity_job(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_activity_job_Result>("agent_get_activity_job", jobIdParameter);
        }
    
        public virtual ObjectResult<agent_get_agent_regions_Result> agent_get_agent_regions(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_agent_regions_Result>("agent_get_agent_regions", userIdParameter);
        }
    
        public virtual ObjectResult<agent_get_agent_user_list_Result> agent_get_agent_user_list(Nullable<int> agentUserId, Nullable<int> roleId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string searchText)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_agent_user_list_Result>("agent_get_agent_user_list", agentUserIdParameter, roleIdParameter, dateFromParameter, dateToParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<agent_get_business_approved_job_list_Result> agent_get_business_approved_job_list(Nullable<long> companyId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> jobTypeId, string regionIds, Nullable<int> regionId, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_business_approved_job_list_Result>("agent_get_business_approved_job_list", companyIdParameter, dateFromParameter, dateToParameter, jobTypeIdParameter, regionIdsParameter, regionIdParameter, recommendedParameter, stickyParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<agent_get_business_pending_approve_job_list_Result> agent_get_business_pending_approve_job_list(Nullable<long> companyId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> jobTypeId, string regionIds, Nullable<int> regionId, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_business_pending_approve_job_list_Result>("agent_get_business_pending_approve_job_list", companyIdParameter, dateFromParameter, dateToParameter, jobTypeIdParameter, regionIdsParameter, regionIdParameter, recommendedParameter, stickyParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<agent_get_business_undercarriage_job_list_Result> agent_get_business_undercarriage_job_list(Nullable<long> companyId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> jobTypeId, string regionIds, Nullable<int> regionId, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_business_undercarriage_job_list_Result>("agent_get_business_undercarriage_job_list", companyIdParameter, dateFromParameter, dateToParameter, jobTypeIdParameter, regionIdsParameter, regionIdParameter, recommendedParameter, stickyParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<agent_get_campus_job_Result> agent_get_campus_job(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_campus_job_Result>("agent_get_campus_job", jobIdParameter);
        }
    
        public virtual ObjectResult<agent_get_company_approved_job_list_Result> agent_get_company_approved_job_list(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> jobTypeId, string regionIds, Nullable<int> regionId, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_company_approved_job_list_Result>("agent_get_company_approved_job_list", dateFromParameter, dateToParameter, jobTypeIdParameter, regionIdsParameter, regionIdParameter, recommendedParameter, stickyParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<agent_get_company_pending_approve_job_list_Result> agent_get_company_pending_approve_job_list(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> jobTypeId, string regionIds, Nullable<int> regionId, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_company_pending_approve_job_list_Result>("agent_get_company_pending_approve_job_list", dateFromParameter, dateToParameter, jobTypeIdParameter, regionIdsParameter, regionIdParameter, recommendedParameter, stickyParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<agent_get_company_undercarriage_job_list_Result> agent_get_company_undercarriage_job_list(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> jobTypeId, string regionIds, Nullable<int> regionId, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_company_undercarriage_job_list_Result>("agent_get_company_undercarriage_job_list", dateFromParameter, dateToParameter, jobTypeIdParameter, regionIdsParameter, regionIdParameter, recommendedParameter, stickyParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<agent_get_complained_job_Result> agent_get_complained_job(Nullable<long> jobId, Nullable<int> jobTypeId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_complained_job_Result>("agent_get_complained_job", jobIdParameter, jobTypeIdParameter);
        }
    
        public virtual ObjectResult<agent_get_enterprise_info_Result> agent_get_enterprise_info(Nullable<int> userId, Nullable<int> userTypeId, string companyName, string mobile, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string regionIds, Nullable<int> regionId, Nullable<bool> verified, Nullable<bool> balance, Nullable<bool> status, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userTypeIdParameter = userTypeId.HasValue ?
                new ObjectParameter("UserTypeId", userTypeId) :
                new ObjectParameter("UserTypeId", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var verifiedParameter = verified.HasValue ?
                new ObjectParameter("Verified", verified) :
                new ObjectParameter("Verified", typeof(bool));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("Balance", balance) :
                new ObjectParameter("Balance", typeof(bool));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_enterprise_info_Result>("agent_get_enterprise_info", userIdParameter, userTypeIdParameter, companyNameParameter, mobileParameter, dateFromParameter, dateToParameter, regionIdsParameter, regionIdParameter, verifiedParameter, balanceParameter, statusParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<agent_get_enterprise_user_info_Result> agent_get_enterprise_user_info(Nullable<long> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_enterprise_user_info_Result>("agent_get_enterprise_user_info", companyIdParameter);
        }
    
        public virtual ObjectResult<agent_get_intern_job_Result> agent_get_intern_job(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_intern_job_Result>("agent_get_intern_job", jobIdParameter);
        }
    
        public virtual ObjectResult<agent_get_job_Result> agent_get_job(Nullable<long> jobId, Nullable<int> jobTypeId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_job_Result>("agent_get_job", jobIdParameter, jobTypeIdParameter);
        }
    
        public virtual ObjectResult<agent_get_job_list_Result> agent_get_job_list(Nullable<int> userId, Nullable<int> userTypeId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userTypeIdParameter = userTypeId.HasValue ?
                new ObjectParameter("UserTypeId", userTypeId) :
                new ObjectParameter("UserTypeId", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_job_list_Result>("agent_get_job_list", userIdParameter, userTypeIdParameter, dateFromParameter, dateToParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<agent_get_normal_job_list_Result> agent_get_normal_job_list(string companyName, string mobile, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> jobTypeId, string regionIds, Nullable<int> regionId, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_normal_job_list_Result>("agent_get_normal_job_list", companyNameParameter, mobileParameter, dateFromParameter, dateToParameter, jobTypeIdParameter, regionIdsParameter, regionIdParameter, recommendedParameter, stickyParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<agent_get_promoter_detail_Result> agent_get_promoter_detail(Nullable<int> promoterId)
        {
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_promoter_detail_Result>("agent_get_promoter_detail", promoterIdParameter);
        }
    
        public virtual ObjectResult<agent_get_promoter_list_Result> agent_get_promoter_list(Nullable<int> agentUserId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string promoterName)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var promoterNameParameter = promoterName != null ?
                new ObjectParameter("PromoterName", promoterName) :
                new ObjectParameter("PromoterName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_promoter_list_Result>("agent_get_promoter_list", agentUserIdParameter, dateFromParameter, dateToParameter, promoterNameParameter);
        }
    
        public virtual ObjectResult<agent_get_reptile_activity_job_Result> agent_get_reptile_activity_job(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_reptile_activity_job_Result>("agent_get_reptile_activity_job", jobIdParameter);
        }
    
        public virtual ObjectResult<agent_get_reptile_campus_job_Result> agent_get_reptile_campus_job(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_reptile_campus_job_Result>("agent_get_reptile_campus_job", jobIdParameter);
        }
    
        public virtual ObjectResult<agent_get_reptile_intern_job_Result> agent_get_reptile_intern_job(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_reptile_intern_job_Result>("agent_get_reptile_intern_job", jobIdParameter);
        }
    
        public virtual ObjectResult<agent_get_reptile_job_Result> agent_get_reptile_job(Nullable<long> jobId, Nullable<int> jobTypeId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_reptile_job_Result>("agent_get_reptile_job", jobIdParameter, jobTypeIdParameter);
        }
    
        public virtual ObjectResult<agent_get_reptile_normal_job_list_Result> agent_get_reptile_normal_job_list(string companyName, string mobile, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> jobTypeId, string regionIds, Nullable<int> regionId, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_reptile_normal_job_list_Result>("agent_get_reptile_normal_job_list", companyNameParameter, mobileParameter, dateFromParameter, dateToParameter, jobTypeIdParameter, regionIdsParameter, regionIdParameter, recommendedParameter, stickyParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<agent_get_reptile_pending_approve_job_list_Result> agent_get_reptile_pending_approve_job_list(string companyName, string mobile, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> jobTypeId, string regionIds, Nullable<int> regionId, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_reptile_pending_approve_job_list_Result>("agent_get_reptile_pending_approve_job_list", companyNameParameter, mobileParameter, dateFromParameter, dateToParameter, jobTypeIdParameter, regionIdsParameter, regionIdParameter, recommendedParameter, stickyParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<agent_get_reptile_service_job_Result> agent_get_reptile_service_job(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_reptile_service_job_Result>("agent_get_reptile_service_job", jobIdParameter);
        }
    
        public virtual ObjectResult<agent_get_reptile_tutor_job_Result> agent_get_reptile_tutor_job(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_reptile_tutor_job_Result>("agent_get_reptile_tutor_job", jobIdParameter);
        }
    
        public virtual ObjectResult<agent_get_reptile_undercarriage_job_list_Result> agent_get_reptile_undercarriage_job_list(string companyName, string mobile, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> jobTypeId, string regionIds, Nullable<int> regionId, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_reptile_undercarriage_job_list_Result>("agent_get_reptile_undercarriage_job_list", companyNameParameter, mobileParameter, dateFromParameter, dateToParameter, jobTypeIdParameter, regionIdsParameter, regionIdParameter, recommendedParameter, stickyParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<agent_get_role_list_Result> agent_get_role_list(Nullable<int> agentUserId)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_role_list_Result>("agent_get_role_list", agentUserIdParameter);
        }
    
        public virtual ObjectResult<agent_get_role_permission_Result> agent_get_role_permission(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_role_permission_Result>("agent_get_role_permission", roleIdParameter);
        }
    
        public virtual ObjectResult<agent_get_root_regions_Result> agent_get_root_regions(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_root_regions_Result>("agent_get_root_regions", userIdParameter);
        }
    
        public virtual ObjectResult<agent_get_sales_agent_list_Result> agent_get_sales_agent_list(Nullable<int> agentUserId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string searchText)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_sales_agent_list_Result>("agent_get_sales_agent_list", agentUserIdParameter, dateFromParameter, dateToParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<agent_get_school_Result> agent_get_school(Nullable<int> regionId)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_school_Result>("agent_get_school", regionIdParameter);
        }
    
        public virtual ObjectResult<agent_get_school_list_Result> agent_get_school_list(string regionIds)
        {
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_school_list_Result>("agent_get_school_list", regionIdsParameter);
        }
    
        public virtual ObjectResult<agent_get_service_job_Result> agent_get_service_job(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_service_job_Result>("agent_get_service_job", jobIdParameter);
        }
    
        public virtual ObjectResult<agent_get_tutor_job_Result> agent_get_tutor_job(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_tutor_job_Result>("agent_get_tutor_job", jobIdParameter);
        }
    
        public virtual ObjectResult<agent_get_undercarriage_job_list_Result> agent_get_undercarriage_job_list(string companyName, string mobile, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> jobTypeId, string regionIds, Nullable<int> regionId, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_undercarriage_job_list_Result>("agent_get_undercarriage_job_list", companyNameParameter, mobileParameter, dateFromParameter, dateToParameter, jobTypeIdParameter, regionIdsParameter, regionIdParameter, recommendedParameter, stickyParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<agent_get_user_apply_Result> agent_get_user_apply()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_user_apply_Result>("agent_get_user_apply");
        }
    
        public virtual ObjectResult<agent_get_user_apply_list_Result> agent_get_user_apply_list(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> gender, Nullable<int> tallFrom, Nullable<int> tallTo, string regionIds, Nullable<int> regionId, string mobile, string school, Nullable<int> statusId, Nullable<long> jobId, Nullable<int> jobTypeId, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var tallFromParameter = tallFrom.HasValue ?
                new ObjectParameter("TallFrom", tallFrom) :
                new ObjectParameter("TallFrom", typeof(int));
    
            var tallToParameter = tallTo.HasValue ?
                new ObjectParameter("TallTo", tallTo) :
                new ObjectParameter("TallTo", typeof(int));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var schoolParameter = school != null ?
                new ObjectParameter("School", school) :
                new ObjectParameter("School", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_user_apply_list_Result>("agent_get_user_apply_list", dateFromParameter, dateToParameter, genderParameter, tallFromParameter, tallToParameter, regionIdsParameter, regionIdParameter, mobileParameter, schoolParameter, statusIdParameter, jobIdParameter, jobTypeIdParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<agent_get_user_cash_in_Result> agent_get_user_cash_in(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_user_cash_in_Result>("agent_get_user_cash_in", userIdParameter);
        }
    
        public virtual ObjectResult<agent_get_user_cash_in_list_Result> agent_get_user_cash_in_list(Nullable<long> userId, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_user_cash_in_list_Result>("agent_get_user_cash_in_list", userIdParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<agent_get_user_cash_out_list_Result> agent_get_user_cash_out_list(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string accountNo, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_user_cash_out_list_Result>("agent_get_user_cash_out_list", dateFromParameter, dateToParameter, accountNoParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<agent_get_user_info_Result> agent_get_user_info(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_user_info_Result>("agent_get_user_info", userIdParameter);
        }
    
        public virtual ObjectResult<agent_get_user_job_complain_list_Result> agent_get_user_job_complain_list(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_user_job_complain_list_Result>("agent_get_user_job_complain_list", dateFromParameter, dateToParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<agent_get_user_permission_Result> agent_get_user_permission(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_get_user_permission_Result>("agent_get_user_permission", userIdParameter);
        }
    
        public virtual ObjectResult<string> agent_job_company_hire(Nullable<long> companyId, Nullable<long> jobId, Nullable<long> userId, Nullable<int> jobTypeId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("agent_job_company_hire", companyIdParameter, jobIdParameter, userIdParameter, jobTypeIdParameter);
        }
    
        public virtual int agent_job_company_reject(Nullable<long> companyId, Nullable<long> jobId, Nullable<long> userId, Nullable<int> jobTypeId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_job_company_reject", companyIdParameter, jobIdParameter, userIdParameter, jobTypeIdParameter);
        }
    
        public virtual int agent_job_status_approved(Nullable<long> jobId, Nullable<long> jobTypeId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_job_status_approved", jobIdParameter, jobTypeIdParameter);
        }
    
        public virtual int agent_job_status_rejected(Nullable<long> jobId, Nullable<long> jobTypeId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_job_status_rejected", jobIdParameter, jobTypeIdParameter);
        }
    
        public virtual int agent_message_cash_in(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_message_cash_in", userIdParameter);
        }
    
        public virtual int agent_publish_activity_job(Nullable<int> agentUserId, string companyName, Nullable<long> companyId, string title, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> positionId, Nullable<int> regionId, Nullable<int> wageUnitId, Nullable<decimal> wage, Nullable<bool> includeDinner, Nullable<bool> includeRoom, Nullable<bool> includeCommission, Nullable<int> termId, Nullable<int> gender, Nullable<decimal> deposit, Nullable<int> peopleRequired, string contact, string contactPhone, string address, Nullable<System.DateTime> workFrom, Nullable<System.DateTime> workEnd, string description, Nullable<bool> monMorning, Nullable<bool> tueMorning, Nullable<bool> wedMorning, Nullable<bool> thuMorning, Nullable<bool> friMorning, Nullable<bool> satMorning, Nullable<bool> sunMorning, Nullable<bool> monAfternoon, Nullable<bool> tueAfternoon, Nullable<bool> wedAfternoon, Nullable<bool> thuAfternoon, Nullable<bool> friAfternoon, Nullable<bool> satAfternoon, Nullable<bool> sunAfternoon, Nullable<bool> monNight, Nullable<bool> tueNight, Nullable<bool> wedNight, Nullable<bool> thuNight, Nullable<bool> friNight, Nullable<bool> satNight, Nullable<bool> sunNight)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var positionIdParameter = positionId.HasValue ?
                new ObjectParameter("PositionId", positionId) :
                new ObjectParameter("PositionId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var wageUnitIdParameter = wageUnitId.HasValue ?
                new ObjectParameter("WageUnitId", wageUnitId) :
                new ObjectParameter("WageUnitId", typeof(int));
    
            var wageParameter = wage.HasValue ?
                new ObjectParameter("Wage", wage) :
                new ObjectParameter("Wage", typeof(decimal));
    
            var includeDinnerParameter = includeDinner.HasValue ?
                new ObjectParameter("IncludeDinner", includeDinner) :
                new ObjectParameter("IncludeDinner", typeof(bool));
    
            var includeRoomParameter = includeRoom.HasValue ?
                new ObjectParameter("IncludeRoom", includeRoom) :
                new ObjectParameter("IncludeRoom", typeof(bool));
    
            var includeCommissionParameter = includeCommission.HasValue ?
                new ObjectParameter("IncludeCommission", includeCommission) :
                new ObjectParameter("IncludeCommission", typeof(bool));
    
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var depositParameter = deposit.HasValue ?
                new ObjectParameter("Deposit", deposit) :
                new ObjectParameter("Deposit", typeof(decimal));
    
            var peopleRequiredParameter = peopleRequired.HasValue ?
                new ObjectParameter("PeopleRequired", peopleRequired) :
                new ObjectParameter("PeopleRequired", typeof(int));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var contactPhoneParameter = contactPhone != null ?
                new ObjectParameter("ContactPhone", contactPhone) :
                new ObjectParameter("ContactPhone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var workFromParameter = workFrom.HasValue ?
                new ObjectParameter("WorkFrom", workFrom) :
                new ObjectParameter("WorkFrom", typeof(System.DateTime));
    
            var workEndParameter = workEnd.HasValue ?
                new ObjectParameter("WorkEnd", workEnd) :
                new ObjectParameter("WorkEnd", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_publish_activity_job", agentUserIdParameter, companyNameParameter, companyIdParameter, titleParameter, recommendedParameter, stickyParameter, positionIdParameter, regionIdParameter, wageUnitIdParameter, wageParameter, includeDinnerParameter, includeRoomParameter, includeCommissionParameter, termIdParameter, genderParameter, depositParameter, peopleRequiredParameter, contactParameter, contactPhoneParameter, addressParameter, workFromParameter, workEndParameter, descriptionParameter, monMorningParameter, tueMorningParameter, wedMorningParameter, thuMorningParameter, friMorningParameter, satMorningParameter, sunMorningParameter, monAfternoonParameter, tueAfternoonParameter, wedAfternoonParameter, thuAfternoonParameter, friAfternoonParameter, satAfternoonParameter, sunAfternoonParameter, monNightParameter, tueNightParameter, wedNightParameter, thuNightParameter, friNightParameter, satNightParameter, sunNightParameter);
        }
    
        public virtual int agent_publish_campus_job(Nullable<int> agentUserId, string companyName, Nullable<long> companyId, string title, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> categoryId, Nullable<int> schoolId, Nullable<int> regionId, Nullable<int> gender, Nullable<int> peopleRequired, string contact, string contactPhone, string address, Nullable<System.DateTime> workFrom, Nullable<System.DateTime> workEnd, string description, Nullable<bool> monMorning, Nullable<bool> tueMorning, Nullable<bool> wedMorning, Nullable<bool> thuMorning, Nullable<bool> friMorning, Nullable<bool> satMorning, Nullable<bool> sunMorning, Nullable<bool> monAfternoon, Nullable<bool> tueAfternoon, Nullable<bool> wedAfternoon, Nullable<bool> thuAfternoon, Nullable<bool> friAfternoon, Nullable<bool> satAfternoon, Nullable<bool> sunAfternoon, Nullable<bool> monNight, Nullable<bool> tueNight, Nullable<bool> wedNight, Nullable<bool> thuNight, Nullable<bool> friNight, Nullable<bool> satNight, Nullable<bool> sunNight)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var peopleRequiredParameter = peopleRequired.HasValue ?
                new ObjectParameter("PeopleRequired", peopleRequired) :
                new ObjectParameter("PeopleRequired", typeof(int));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var contactPhoneParameter = contactPhone != null ?
                new ObjectParameter("ContactPhone", contactPhone) :
                new ObjectParameter("ContactPhone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var workFromParameter = workFrom.HasValue ?
                new ObjectParameter("WorkFrom", workFrom) :
                new ObjectParameter("WorkFrom", typeof(System.DateTime));
    
            var workEndParameter = workEnd.HasValue ?
                new ObjectParameter("WorkEnd", workEnd) :
                new ObjectParameter("WorkEnd", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_publish_campus_job", agentUserIdParameter, companyNameParameter, companyIdParameter, titleParameter, recommendedParameter, stickyParameter, categoryIdParameter, schoolIdParameter, regionIdParameter, genderParameter, peopleRequiredParameter, contactParameter, contactPhoneParameter, addressParameter, workFromParameter, workEndParameter, descriptionParameter, monMorningParameter, tueMorningParameter, wedMorningParameter, thuMorningParameter, friMorningParameter, satMorningParameter, sunMorningParameter, monAfternoonParameter, tueAfternoonParameter, wedAfternoonParameter, thuAfternoonParameter, friAfternoonParameter, satAfternoonParameter, sunAfternoonParameter, monNightParameter, tueNightParameter, wedNightParameter, thuNightParameter, friNightParameter, satNightParameter, sunNightParameter);
        }
    
        public virtual int agent_publish_intern_job(Nullable<int> agentUserId, string companyName, Nullable<long> companyId, string title, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> category, Nullable<int> regionId, Nullable<int> wageUnitId, Nullable<decimal> wage, Nullable<bool> includeDinner, Nullable<bool> includeRoom, Nullable<bool> includeCommission, Nullable<int> gender, Nullable<decimal> deposit, Nullable<int> peopleRequired, string contact, string contactPhone, string address, Nullable<System.DateTime> workFrom, Nullable<System.DateTime> workEnd, string description, Nullable<bool> monMorning, Nullable<bool> tueMorning, Nullable<bool> wedMorning, Nullable<bool> thuMorning, Nullable<bool> friMorning, Nullable<bool> satMorning, Nullable<bool> sunMorning, Nullable<bool> monAfternoon, Nullable<bool> tueAfternoon, Nullable<bool> wedAfternoon, Nullable<bool> thuAfternoon, Nullable<bool> friAfternoon, Nullable<bool> satAfternoon, Nullable<bool> sunAfternoon, Nullable<bool> monNight, Nullable<bool> tueNight, Nullable<bool> wedNight, Nullable<bool> thuNight, Nullable<bool> friNight, Nullable<bool> satNight, Nullable<bool> sunNight)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var wageUnitIdParameter = wageUnitId.HasValue ?
                new ObjectParameter("WageUnitId", wageUnitId) :
                new ObjectParameter("WageUnitId", typeof(int));
    
            var wageParameter = wage.HasValue ?
                new ObjectParameter("Wage", wage) :
                new ObjectParameter("Wage", typeof(decimal));
    
            var includeDinnerParameter = includeDinner.HasValue ?
                new ObjectParameter("IncludeDinner", includeDinner) :
                new ObjectParameter("IncludeDinner", typeof(bool));
    
            var includeRoomParameter = includeRoom.HasValue ?
                new ObjectParameter("IncludeRoom", includeRoom) :
                new ObjectParameter("IncludeRoom", typeof(bool));
    
            var includeCommissionParameter = includeCommission.HasValue ?
                new ObjectParameter("IncludeCommission", includeCommission) :
                new ObjectParameter("IncludeCommission", typeof(bool));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var depositParameter = deposit.HasValue ?
                new ObjectParameter("Deposit", deposit) :
                new ObjectParameter("Deposit", typeof(decimal));
    
            var peopleRequiredParameter = peopleRequired.HasValue ?
                new ObjectParameter("PeopleRequired", peopleRequired) :
                new ObjectParameter("PeopleRequired", typeof(int));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var contactPhoneParameter = contactPhone != null ?
                new ObjectParameter("ContactPhone", contactPhone) :
                new ObjectParameter("ContactPhone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var workFromParameter = workFrom.HasValue ?
                new ObjectParameter("WorkFrom", workFrom) :
                new ObjectParameter("WorkFrom", typeof(System.DateTime));
    
            var workEndParameter = workEnd.HasValue ?
                new ObjectParameter("WorkEnd", workEnd) :
                new ObjectParameter("WorkEnd", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_publish_intern_job", agentUserIdParameter, companyNameParameter, companyIdParameter, titleParameter, recommendedParameter, stickyParameter, categoryParameter, regionIdParameter, wageUnitIdParameter, wageParameter, includeDinnerParameter, includeRoomParameter, includeCommissionParameter, genderParameter, depositParameter, peopleRequiredParameter, contactParameter, contactPhoneParameter, addressParameter, workFromParameter, workEndParameter, descriptionParameter, monMorningParameter, tueMorningParameter, wedMorningParameter, thuMorningParameter, friMorningParameter, satMorningParameter, sunMorningParameter, monAfternoonParameter, tueAfternoonParameter, wedAfternoonParameter, thuAfternoonParameter, friAfternoonParameter, satAfternoonParameter, sunAfternoonParameter, monNightParameter, tueNightParameter, wedNightParameter, thuNightParameter, friNightParameter, satNightParameter, sunNightParameter);
        }
    
        public virtual int agent_publish_service_job(Nullable<int> agentUserId, string companyName, Nullable<long> companyId, string title, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> categoryId, Nullable<int> positionId, Nullable<int> regionId, Nullable<int> wageUnitId, Nullable<decimal> wage, Nullable<bool> includeDinner, Nullable<bool> includeRoom, Nullable<bool> includeCommission, Nullable<int> termId, Nullable<int> gender, Nullable<decimal> deposit, Nullable<int> peopleRequired, string contact, string contactPhone, string address, Nullable<System.DateTime> workFrom, Nullable<System.DateTime> workEnd, string description, Nullable<bool> monMorning, Nullable<bool> tueMorning, Nullable<bool> wedMorning, Nullable<bool> thuMorning, Nullable<bool> friMorning, Nullable<bool> satMorning, Nullable<bool> sunMorning, Nullable<bool> monAfternoon, Nullable<bool> tueAfternoon, Nullable<bool> wedAfternoon, Nullable<bool> thuAfternoon, Nullable<bool> friAfternoon, Nullable<bool> satAfternoon, Nullable<bool> sunAfternoon, Nullable<bool> monNight, Nullable<bool> tueNight, Nullable<bool> wedNight, Nullable<bool> thuNight, Nullable<bool> friNight, Nullable<bool> satNight, Nullable<bool> sunNight)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var positionIdParameter = positionId.HasValue ?
                new ObjectParameter("PositionId", positionId) :
                new ObjectParameter("PositionId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var wageUnitIdParameter = wageUnitId.HasValue ?
                new ObjectParameter("WageUnitId", wageUnitId) :
                new ObjectParameter("WageUnitId", typeof(int));
    
            var wageParameter = wage.HasValue ?
                new ObjectParameter("Wage", wage) :
                new ObjectParameter("Wage", typeof(decimal));
    
            var includeDinnerParameter = includeDinner.HasValue ?
                new ObjectParameter("IncludeDinner", includeDinner) :
                new ObjectParameter("IncludeDinner", typeof(bool));
    
            var includeRoomParameter = includeRoom.HasValue ?
                new ObjectParameter("IncludeRoom", includeRoom) :
                new ObjectParameter("IncludeRoom", typeof(bool));
    
            var includeCommissionParameter = includeCommission.HasValue ?
                new ObjectParameter("IncludeCommission", includeCommission) :
                new ObjectParameter("IncludeCommission", typeof(bool));
    
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var depositParameter = deposit.HasValue ?
                new ObjectParameter("Deposit", deposit) :
                new ObjectParameter("Deposit", typeof(decimal));
    
            var peopleRequiredParameter = peopleRequired.HasValue ?
                new ObjectParameter("PeopleRequired", peopleRequired) :
                new ObjectParameter("PeopleRequired", typeof(int));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var contactPhoneParameter = contactPhone != null ?
                new ObjectParameter("ContactPhone", contactPhone) :
                new ObjectParameter("ContactPhone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var workFromParameter = workFrom.HasValue ?
                new ObjectParameter("WorkFrom", workFrom) :
                new ObjectParameter("WorkFrom", typeof(System.DateTime));
    
            var workEndParameter = workEnd.HasValue ?
                new ObjectParameter("WorkEnd", workEnd) :
                new ObjectParameter("WorkEnd", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_publish_service_job", agentUserIdParameter, companyNameParameter, companyIdParameter, titleParameter, recommendedParameter, stickyParameter, categoryIdParameter, positionIdParameter, regionIdParameter, wageUnitIdParameter, wageParameter, includeDinnerParameter, includeRoomParameter, includeCommissionParameter, termIdParameter, genderParameter, depositParameter, peopleRequiredParameter, contactParameter, contactPhoneParameter, addressParameter, workFromParameter, workEndParameter, descriptionParameter, monMorningParameter, tueMorningParameter, wedMorningParameter, thuMorningParameter, friMorningParameter, satMorningParameter, sunMorningParameter, monAfternoonParameter, tueAfternoonParameter, wedAfternoonParameter, thuAfternoonParameter, friAfternoonParameter, satAfternoonParameter, sunAfternoonParameter, monNightParameter, tueNightParameter, wedNightParameter, thuNightParameter, friNightParameter, satNightParameter, sunNightParameter);
        }
    
        public virtual int agent_publish_tutor_job(Nullable<int> agentUserId, string companyName, Nullable<long> companyId, string title, Nullable<bool> recommended, Nullable<bool> sticky, Nullable<int> levelId, Nullable<int> paperId, Nullable<int> regionId, Nullable<int> wageUnitId, Nullable<decimal> wage, Nullable<bool> includeDinner, Nullable<bool> includeRoom, Nullable<bool> includeCommission, Nullable<int> termId, Nullable<int> gender, Nullable<decimal> deposit, Nullable<int> peopleRequired, string contact, string contactPhone, string address, Nullable<System.DateTime> workFrom, Nullable<System.DateTime> workEnd, string description, Nullable<bool> monMorning, Nullable<bool> tueMorning, Nullable<bool> wedMorning, Nullable<bool> thuMorning, Nullable<bool> friMorning, Nullable<bool> satMorning, Nullable<bool> sunMorning, Nullable<bool> monAfternoon, Nullable<bool> tueAfternoon, Nullable<bool> wedAfternoon, Nullable<bool> thuAfternoon, Nullable<bool> friAfternoon, Nullable<bool> satAfternoon, Nullable<bool> sunAfternoon, Nullable<bool> monNight, Nullable<bool> tueNight, Nullable<bool> wedNight, Nullable<bool> thuNight, Nullable<bool> friNight, Nullable<bool> satNight, Nullable<bool> sunNight)
        {
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var recommendedParameter = recommended.HasValue ?
                new ObjectParameter("Recommended", recommended) :
                new ObjectParameter("Recommended", typeof(bool));
    
            var stickyParameter = sticky.HasValue ?
                new ObjectParameter("Sticky", sticky) :
                new ObjectParameter("Sticky", typeof(bool));
    
            var levelIdParameter = levelId.HasValue ?
                new ObjectParameter("LevelId", levelId) :
                new ObjectParameter("LevelId", typeof(int));
    
            var paperIdParameter = paperId.HasValue ?
                new ObjectParameter("PaperId", paperId) :
                new ObjectParameter("PaperId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var wageUnitIdParameter = wageUnitId.HasValue ?
                new ObjectParameter("WageUnitId", wageUnitId) :
                new ObjectParameter("WageUnitId", typeof(int));
    
            var wageParameter = wage.HasValue ?
                new ObjectParameter("Wage", wage) :
                new ObjectParameter("Wage", typeof(decimal));
    
            var includeDinnerParameter = includeDinner.HasValue ?
                new ObjectParameter("IncludeDinner", includeDinner) :
                new ObjectParameter("IncludeDinner", typeof(bool));
    
            var includeRoomParameter = includeRoom.HasValue ?
                new ObjectParameter("IncludeRoom", includeRoom) :
                new ObjectParameter("IncludeRoom", typeof(bool));
    
            var includeCommissionParameter = includeCommission.HasValue ?
                new ObjectParameter("IncludeCommission", includeCommission) :
                new ObjectParameter("IncludeCommission", typeof(bool));
    
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var depositParameter = deposit.HasValue ?
                new ObjectParameter("Deposit", deposit) :
                new ObjectParameter("Deposit", typeof(decimal));
    
            var peopleRequiredParameter = peopleRequired.HasValue ?
                new ObjectParameter("PeopleRequired", peopleRequired) :
                new ObjectParameter("PeopleRequired", typeof(int));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var contactPhoneParameter = contactPhone != null ?
                new ObjectParameter("ContactPhone", contactPhone) :
                new ObjectParameter("ContactPhone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var workFromParameter = workFrom.HasValue ?
                new ObjectParameter("WorkFrom", workFrom) :
                new ObjectParameter("WorkFrom", typeof(System.DateTime));
    
            var workEndParameter = workEnd.HasValue ?
                new ObjectParameter("WorkEnd", workEnd) :
                new ObjectParameter("WorkEnd", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_publish_tutor_job", agentUserIdParameter, companyNameParameter, companyIdParameter, titleParameter, recommendedParameter, stickyParameter, levelIdParameter, paperIdParameter, regionIdParameter, wageUnitIdParameter, wageParameter, includeDinnerParameter, includeRoomParameter, includeCommissionParameter, termIdParameter, genderParameter, depositParameter, peopleRequiredParameter, contactParameter, contactPhoneParameter, addressParameter, workFromParameter, workEndParameter, descriptionParameter, monMorningParameter, tueMorningParameter, wedMorningParameter, thuMorningParameter, friMorningParameter, satMorningParameter, sunMorningParameter, monAfternoonParameter, tueAfternoonParameter, wedAfternoonParameter, thuAfternoonParameter, friAfternoonParameter, satAfternoonParameter, sunAfternoonParameter, monNightParameter, tueNightParameter, wedNightParameter, thuNightParameter, friNightParameter, satNightParameter, sunNightParameter);
        }
    
        public virtual int agent_register_enterprise_user(string fullName, string mobile, string hashedPassword, string salt, Nullable<int> regionId, string address, Nullable<bool> status, Nullable<bool> verified, string email, Nullable<int> agentUserId)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var hashedPasswordParameter = hashedPassword != null ?
                new ObjectParameter("HashedPassword", hashedPassword) :
                new ObjectParameter("HashedPassword", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var verifiedParameter = verified.HasValue ?
                new ObjectParameter("Verified", verified) :
                new ObjectParameter("Verified", typeof(bool));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var agentUserIdParameter = agentUserId.HasValue ?
                new ObjectParameter("AgentUserId", agentUserId) :
                new ObjectParameter("AgentUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_register_enterprise_user", fullNameParameter, mobileParameter, hashedPasswordParameter, saltParameter, regionIdParameter, addressParameter, statusParameter, verifiedParameter, emailParameter, agentUserIdParameter);
        }
    
        public virtual ObjectResult<agent_search_user_info_Result> agent_search_user_info(string regionIds, string subRegionIds, Nullable<long> schoolRegionId, Nullable<long> regionId, Nullable<int> gender, Nullable<int> tallFrom, Nullable<int> tallTo, string mobile, string school, Nullable<System.DateTime> lastestLogonDateFrom, Nullable<System.DateTime> lastestLogonDateTo, Nullable<System.DateTime> createdDateFrom, Nullable<System.DateTime> createdDateTo, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var subRegionIdsParameter = subRegionIds != null ?
                new ObjectParameter("SubRegionIds", subRegionIds) :
                new ObjectParameter("SubRegionIds", typeof(string));
    
            var schoolRegionIdParameter = schoolRegionId.HasValue ?
                new ObjectParameter("SchoolRegionId", schoolRegionId) :
                new ObjectParameter("SchoolRegionId", typeof(long));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(long));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var tallFromParameter = tallFrom.HasValue ?
                new ObjectParameter("TallFrom", tallFrom) :
                new ObjectParameter("TallFrom", typeof(int));
    
            var tallToParameter = tallTo.HasValue ?
                new ObjectParameter("TallTo", tallTo) :
                new ObjectParameter("TallTo", typeof(int));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var schoolParameter = school != null ?
                new ObjectParameter("School", school) :
                new ObjectParameter("School", typeof(string));
    
            var lastestLogonDateFromParameter = lastestLogonDateFrom.HasValue ?
                new ObjectParameter("LastestLogonDateFrom", lastestLogonDateFrom) :
                new ObjectParameter("LastestLogonDateFrom", typeof(System.DateTime));
    
            var lastestLogonDateToParameter = lastestLogonDateTo.HasValue ?
                new ObjectParameter("LastestLogonDateTo", lastestLogonDateTo) :
                new ObjectParameter("LastestLogonDateTo", typeof(System.DateTime));
    
            var createdDateFromParameter = createdDateFrom.HasValue ?
                new ObjectParameter("CreatedDateFrom", createdDateFrom) :
                new ObjectParameter("CreatedDateFrom", typeof(System.DateTime));
    
            var createdDateToParameter = createdDateTo.HasValue ?
                new ObjectParameter("CreatedDateTo", createdDateTo) :
                new ObjectParameter("CreatedDateTo", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<agent_search_user_info_Result>("agent_search_user_info", regionIdsParameter, subRegionIdsParameter, schoolRegionIdParameter, regionIdParameter, genderParameter, tallFromParameter, tallToParameter, mobileParameter, schoolParameter, lastestLogonDateFromParameter, lastestLogonDateToParameter, createdDateFromParameter, createdDateToParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int agent_undercarriage_job(Nullable<long> jobId, Nullable<int> jobTypeId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_undercarriage_job", jobIdParameter, jobTypeIdParameter);
        }
    
        public virtual int agent_undercarriage_reptile_job(Nullable<long> jobId, Nullable<int> jobTypeId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_undercarriage_reptile_job", jobIdParameter, jobTypeIdParameter);
        }
    
        public virtual int agent_update_enterprise_user(Nullable<long> companyId, string fullName, string mobile, Nullable<int> regionId, string address, Nullable<bool> status, Nullable<bool> verified, Nullable<bool> balance, string email)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var verifiedParameter = verified.HasValue ?
                new ObjectParameter("Verified", verified) :
                new ObjectParameter("Verified", typeof(bool));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("Balance", balance) :
                new ObjectParameter("Balance", typeof(bool));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_update_enterprise_user", companyIdParameter, fullNameParameter, mobileParameter, regionIdParameter, addressParameter, statusParameter, verifiedParameter, balanceParameter, emailParameter);
        }
    
        public virtual int agent_update_password(Nullable<int> userId, string hashedPassword, string salt)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var hashedPasswordParameter = hashedPassword != null ?
                new ObjectParameter("hashedPassword", hashedPassword) :
                new ObjectParameter("hashedPassword", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("salt", salt) :
                new ObjectParameter("salt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agent_update_password", userIdParameter, hashedPasswordParameter, saltParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> agent_user_has_permission(Nullable<int> userId, string requiredPermission)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var requiredPermissionParameter = requiredPermission != null ?
                new ObjectParameter("RequiredPermission", requiredPermission) :
                new ObjectParameter("RequiredPermission", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("agent_user_has_permission", userIdParameter, requiredPermissionParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> agent_user_has_role(Nullable<int> userId, string requiredRole)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var requiredRoleParameter = requiredRole != null ?
                new ObjectParameter("RequiredRole", requiredRole) :
                new ObjectParameter("RequiredRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("agent_user_has_role", userIdParameter, requiredRoleParameter);
        }
    
        public virtual ObjectResult<alipay_job_trade_payment_confirmed_Result> alipay_job_trade_payment_confirmed(Nullable<long> tradeId)
        {
            var tradeIdParameter = tradeId.HasValue ?
                new ObjectParameter("TradeId", tradeId) :
                new ObjectParameter("TradeId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<alipay_job_trade_payment_confirmed_Result>("alipay_job_trade_payment_confirmed", tradeIdParameter);
        }
    
        public virtual ObjectResult<api_company_login_Result> api_company_login(Nullable<long> companyId, string mobile, string device, string deviceToken, string iPAddress, Nullable<int> downloadFromApplicationId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var deviceParameter = device != null ?
                new ObjectParameter("Device", device) :
                new ObjectParameter("Device", typeof(string));
    
            var deviceTokenParameter = deviceToken != null ?
                new ObjectParameter("DeviceToken", deviceToken) :
                new ObjectParameter("DeviceToken", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var downloadFromApplicationIdParameter = downloadFromApplicationId.HasValue ?
                new ObjectParameter("DownloadFromApplicationId", downloadFromApplicationId) :
                new ObjectParameter("DownloadFromApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_company_login_Result>("api_company_login", companyIdParameter, mobileParameter, deviceParameter, deviceTokenParameter, iPAddressParameter, downloadFromApplicationIdParameter);
        }
    
        public virtual int api_create_search_filter_by_user(Nullable<long> userId, Nullable<int> gender, string regions, string activityJobPositions, string campusJobCategories, string internJobCategories, string serviceJobPositions, string tutorJobPapers, Nullable<bool> monMorning, Nullable<bool> monAfternoon, Nullable<bool> monNight, Nullable<bool> tueMorning, Nullable<bool> tueAfternoon, Nullable<bool> tueNight, Nullable<bool> wedMorning, Nullable<bool> wedAfternoon, Nullable<bool> wedNight, Nullable<bool> thuMorning, Nullable<bool> thuAfternoon, Nullable<bool> thuNight, Nullable<bool> friMorning, Nullable<bool> friAfternoon, Nullable<bool> friNight, Nullable<bool> satMorning, Nullable<bool> satAfternoon, Nullable<bool> satNight, Nullable<bool> sunMorning, Nullable<bool> sunAfternoon, Nullable<bool> sunNight)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var regionsParameter = regions != null ?
                new ObjectParameter("Regions", regions) :
                new ObjectParameter("Regions", typeof(string));
    
            var activityJobPositionsParameter = activityJobPositions != null ?
                new ObjectParameter("ActivityJobPositions", activityJobPositions) :
                new ObjectParameter("ActivityJobPositions", typeof(string));
    
            var campusJobCategoriesParameter = campusJobCategories != null ?
                new ObjectParameter("CampusJobCategories", campusJobCategories) :
                new ObjectParameter("CampusJobCategories", typeof(string));
    
            var internJobCategoriesParameter = internJobCategories != null ?
                new ObjectParameter("InternJobCategories", internJobCategories) :
                new ObjectParameter("InternJobCategories", typeof(string));
    
            var serviceJobPositionsParameter = serviceJobPositions != null ?
                new ObjectParameter("ServiceJobPositions", serviceJobPositions) :
                new ObjectParameter("ServiceJobPositions", typeof(string));
    
            var tutorJobPapersParameter = tutorJobPapers != null ?
                new ObjectParameter("TutorJobPapers", tutorJobPapers) :
                new ObjectParameter("TutorJobPapers", typeof(string));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_create_search_filter_by_user", userIdParameter, genderParameter, regionsParameter, activityJobPositionsParameter, campusJobCategoriesParameter, internJobCategoriesParameter, serviceJobPositionsParameter, tutorJobPapersParameter, monMorningParameter, monAfternoonParameter, monNightParameter, tueMorningParameter, tueAfternoonParameter, tueNightParameter, wedMorningParameter, wedAfternoonParameter, wedNightParameter, thuMorningParameter, thuAfternoonParameter, thuNightParameter, friMorningParameter, friAfternoonParameter, friNightParameter, satMorningParameter, satAfternoonParameter, satNightParameter, sunMorningParameter, sunAfternoonParameter, sunNightParameter);
        }
    
        public virtual int api_create_user_bank_account(Nullable<long> userId, string accountName, string accountNo, Nullable<int> bankId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_create_user_bank_account", userIdParameter, accountNameParameter, accountNoParameter, bankIdParameter);
        }
    
        public virtual int api_delete_company_job_list_employee(Nullable<long> companyId, Nullable<long> jobId, Nullable<int> jobTypeId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_delete_company_job_list_employee", companyIdParameter, jobIdParameter, jobTypeIdParameter);
        }
    
        public virtual ObjectResult<api_get_activity_job_detail_Result> api_get_activity_job_detail(Nullable<long> jobId, Nullable<long> userId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_activity_job_detail_Result>("api_get_activity_job_detail", jobIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<api_get_advertising_home_page_Result> api_get_advertising_home_page()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_advertising_home_page_Result>("api_get_advertising_home_page");
        }
    
        public virtual ObjectResult<api_get_campus_job_detail_Result> api_get_campus_job_detail(Nullable<long> jobId, Nullable<long> userId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_campus_job_detail_Result>("api_get_campus_job_detail", jobIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<api_get_company_info_Result> api_get_company_info(Nullable<long> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_company_info_Result>("api_get_company_info", companyIdParameter);
        }
    
        public virtual ObjectResult<api_get_company_job_list_Result> api_get_company_job_list(Nullable<long> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_company_job_list_Result>("api_get_company_job_list", companyIdParameter);
        }
    
        public virtual ObjectResult<api_get_company_job_list_employee_Result> api_get_company_job_list_employee(Nullable<long> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_company_job_list_employee_Result>("api_get_company_job_list_employee", companyIdParameter);
        }
    
        public virtual ObjectResult<api_get_company_job_list_new_Result> api_get_company_job_list_new(Nullable<long> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_company_job_list_new_Result>("api_get_company_job_list_new", companyIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> api_get_entity_update(string entity, Nullable<int> version)
        {
            var entityParameter = entity != null ?
                new ObjectParameter("Entity", entity) :
                new ObjectParameter("Entity", typeof(string));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("api_get_entity_update", entityParameter, versionParameter);
        }
    
        public virtual ObjectResult<api_get_intern_job_detail_Result> api_get_intern_job_detail(Nullable<long> jobId, Nullable<long> userId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_intern_job_detail_Result>("api_get_intern_job_detail", jobIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<api_get_job_applied_user_activity_Result> api_get_job_applied_user_activity(Nullable<long> jobId, Nullable<long> companyId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_job_applied_user_activity_Result>("api_get_job_applied_user_activity", jobIdParameter, companyIdParameter);
        }
    
        public virtual ObjectResult<api_get_job_applied_user_campus_Result> api_get_job_applied_user_campus(Nullable<long> jobId, Nullable<long> companyId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_job_applied_user_campus_Result>("api_get_job_applied_user_campus", jobIdParameter, companyIdParameter);
        }
    
        public virtual ObjectResult<api_get_job_applied_user_intern_Result> api_get_job_applied_user_intern(Nullable<long> jobId, Nullable<long> companyId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_job_applied_user_intern_Result>("api_get_job_applied_user_intern", jobIdParameter, companyIdParameter);
        }
    
        public virtual ObjectResult<api_get_job_applied_user_service_Result> api_get_job_applied_user_service(Nullable<long> jobId, Nullable<long> companyId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_job_applied_user_service_Result>("api_get_job_applied_user_service", jobIdParameter, companyIdParameter);
        }
    
        public virtual ObjectResult<api_get_job_applied_user_tutor_Result> api_get_job_applied_user_tutor(Nullable<long> jobId, Nullable<long> companyId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_job_applied_user_tutor_Result>("api_get_job_applied_user_tutor", jobIdParameter, companyIdParameter);
        }
    
        public virtual ObjectResult<api_get_job_category_Result> api_get_job_category()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_job_category_Result>("api_get_job_category");
        }
    
        public virtual ObjectResult<api_get_job_sign_in_employee_list_Result> api_get_job_sign_in_employee_list(Nullable<long> jobId, Nullable<int> jobTypeId, Nullable<System.DateTime> today)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var todayParameter = today.HasValue ?
                new ObjectParameter("Today", today) :
                new ObjectParameter("Today", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_job_sign_in_employee_list_Result>("api_get_job_sign_in_employee_list", jobIdParameter, jobTypeIdParameter, todayParameter);
        }
    
        public virtual ObjectResult<api_get_job_user_favorite_Result> api_get_job_user_favorite(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_job_user_favorite_Result>("api_get_job_user_favorite", userIdParameter);
        }
    
        public virtual ObjectResult<api_get_message_list_Result> api_get_message_list(Nullable<long> messageId, Nullable<long> userId, Nullable<long> companyId)
        {
            var messageIdParameter = messageId.HasValue ?
                new ObjectParameter("MessageId", messageId) :
                new ObjectParameter("MessageId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_message_list_Result>("api_get_message_list", messageIdParameter, userIdParameter, companyIdParameter);
        }
    
        public virtual ObjectResult<api_get_order_Result> api_get_order(Nullable<long> jobId, Nullable<int> jobTypeId, Nullable<long> companyId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_order_Result>("api_get_order", jobIdParameter, jobTypeIdParameter, companyIdParameter);
        }
    
        public virtual ObjectResult<api_get_order_line_Result> api_get_order_line(Nullable<long> jobId, Nullable<int> jobTypeId, Nullable<long> companyId, Nullable<long> orderId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_order_line_Result>("api_get_order_line", jobIdParameter, jobTypeIdParameter, companyIdParameter, orderIdParameter);
        }
    
        public virtual ObjectResult<api_get_papers_by_level_Result> api_get_papers_by_level()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_papers_by_level_Result>("api_get_papers_by_level");
        }
    
        public virtual ObjectResult<api_get_root_regions_Result> api_get_root_regions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_root_regions_Result>("api_get_root_regions");
        }
    
        public virtual ObjectResult<api_get_school_Result> api_get_school(Nullable<int> regionId)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_school_Result>("api_get_school", regionIdParameter);
        }
    
        public virtual ObjectResult<api_get_search_filter_by_user_Result> api_get_search_filter_by_user(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_search_filter_by_user_Result>("api_get_search_filter_by_user", userIdParameter);
        }
    
        public virtual ObjectResult<api_get_service_job_detail_Result> api_get_service_job_detail(Nullable<long> jobId, Nullable<long> userId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_service_job_detail_Result>("api_get_service_job_detail", jobIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<api_get_tutor_job_detail_Result> api_get_tutor_job_detail(Nullable<long> jobId, Nullable<long> userId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_tutor_job_detail_Result>("api_get_tutor_job_detail", jobIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<api_get_user_bank_account_list_Result> api_get_user_bank_account_list(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_user_bank_account_list_Result>("api_get_user_bank_account_list", userIdParameter);
        }
    
        public virtual ObjectResult<api_get_user_info_Result> api_get_user_info(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_user_info_Result>("api_get_user_info", userIdParameter);
        }
    
        public virtual ObjectResult<api_get_user_job_applied_Result> api_get_user_job_applied(Nullable<long> userId, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_user_job_applied_Result>("api_get_user_job_applied", userIdParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<api_get_user_job_apply_Result> api_get_user_job_apply(Nullable<long> userId, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_get_user_job_apply_Result>("api_get_user_job_apply", userIdParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<string> api_job_company_hire(Nullable<long> companyId, Nullable<long> jobId, Nullable<long> userId, Nullable<int> jobTypeId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("api_job_company_hire", companyIdParameter, jobIdParameter, userIdParameter, jobTypeIdParameter);
        }
    
        public virtual int api_job_company_reject(Nullable<long> companyId, Nullable<long> jobId, Nullable<long> userId, Nullable<int> jobTypeId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_job_company_reject", companyIdParameter, jobIdParameter, userIdParameter, jobTypeIdParameter);
        }
    
        public virtual ObjectResult<api_job_search_activity_Result> api_job_search_activity(string positionId, Nullable<int> regionId, Nullable<int> termId, Nullable<int> gender, Nullable<bool> monMorning, Nullable<bool> monAfternoon, Nullable<bool> monNight, Nullable<bool> tueMorning, Nullable<bool> tueAfternoon, Nullable<bool> tueNight, Nullable<bool> wedMorning, Nullable<bool> wedAfternoon, Nullable<bool> wedNight, Nullable<bool> thuMorning, Nullable<bool> thuAfternoon, Nullable<bool> thuNight, Nullable<bool> friMorning, Nullable<bool> friAfternoon, Nullable<bool> friNight, Nullable<bool> satMorning, Nullable<bool> satAfternoon, Nullable<bool> satNight, Nullable<bool> sunMorning, Nullable<bool> sunAfternoon, Nullable<bool> sunNight, Nullable<int> orderById, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var positionIdParameter = positionId != null ?
                new ObjectParameter("PositionId", positionId) :
                new ObjectParameter("PositionId", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            var orderByIdParameter = orderById.HasValue ?
                new ObjectParameter("OrderById", orderById) :
                new ObjectParameter("OrderById", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_job_search_activity_Result>("api_job_search_activity", positionIdParameter, regionIdParameter, termIdParameter, genderParameter, monMorningParameter, monAfternoonParameter, monNightParameter, tueMorningParameter, tueAfternoonParameter, tueNightParameter, wedMorningParameter, wedAfternoonParameter, wedNightParameter, thuMorningParameter, thuAfternoonParameter, thuNightParameter, friMorningParameter, friAfternoonParameter, friNightParameter, satMorningParameter, satAfternoonParameter, satNightParameter, sunMorningParameter, sunAfternoonParameter, sunNightParameter, orderByIdParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<api_job_search_by_filter_Result> api_job_search_by_filter(Nullable<long> userId, Nullable<int> regionId, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_job_search_by_filter_Result>("api_job_search_by_filter", userIdParameter, regionIdParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<api_job_search_campus_Result> api_job_search_campus(string categoryId, Nullable<int> schoolId, Nullable<int> regionId, Nullable<int> gender, Nullable<bool> monMorning, Nullable<bool> monAfternoon, Nullable<bool> monNight, Nullable<bool> tueMorning, Nullable<bool> tueAfternoon, Nullable<bool> tueNight, Nullable<bool> wedMorning, Nullable<bool> wedAfternoon, Nullable<bool> wedNight, Nullable<bool> thuMorning, Nullable<bool> thuAfternoon, Nullable<bool> thuNight, Nullable<bool> friMorning, Nullable<bool> friAfternoon, Nullable<bool> friNight, Nullable<bool> satMorning, Nullable<bool> satAfternoon, Nullable<bool> satNight, Nullable<bool> sunMorning, Nullable<bool> sunAfternoon, Nullable<bool> sunNight, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var categoryIdParameter = categoryId != null ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(string));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_job_search_campus_Result>("api_job_search_campus", categoryIdParameter, schoolIdParameter, regionIdParameter, genderParameter, monMorningParameter, monAfternoonParameter, monNightParameter, tueMorningParameter, tueAfternoonParameter, tueNightParameter, wedMorningParameter, wedAfternoonParameter, wedNightParameter, thuMorningParameter, thuAfternoonParameter, thuNightParameter, friMorningParameter, friAfternoonParameter, friNightParameter, satMorningParameter, satAfternoonParameter, satNightParameter, sunMorningParameter, sunAfternoonParameter, sunNightParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<api_job_search_intern_Result> api_job_search_intern(string categoryId, Nullable<int> regionId, Nullable<int> gender, Nullable<bool> monMorning, Nullable<bool> monAfternoon, Nullable<bool> monNight, Nullable<bool> tueMorning, Nullable<bool> tueAfternoon, Nullable<bool> tueNight, Nullable<bool> wedMorning, Nullable<bool> wedAfternoon, Nullable<bool> wedNight, Nullable<bool> thuMorning, Nullable<bool> thuAfternoon, Nullable<bool> thuNight, Nullable<bool> friMorning, Nullable<bool> friAfternoon, Nullable<bool> friNight, Nullable<bool> satMorning, Nullable<bool> satAfternoon, Nullable<bool> satNight, Nullable<bool> sunMorning, Nullable<bool> sunAfternoon, Nullable<bool> sunNight, Nullable<int> orderById, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var categoryIdParameter = categoryId != null ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            var orderByIdParameter = orderById.HasValue ?
                new ObjectParameter("OrderById", orderById) :
                new ObjectParameter("OrderById", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_job_search_intern_Result>("api_job_search_intern", categoryIdParameter, regionIdParameter, genderParameter, monMorningParameter, monAfternoonParameter, monNightParameter, tueMorningParameter, tueAfternoonParameter, tueNightParameter, wedMorningParameter, wedAfternoonParameter, wedNightParameter, thuMorningParameter, thuAfternoonParameter, thuNightParameter, friMorningParameter, friAfternoonParameter, friNightParameter, satMorningParameter, satAfternoonParameter, satNightParameter, sunMorningParameter, sunAfternoonParameter, sunNightParameter, orderByIdParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<api_job_search_recommended_Result> api_job_search_recommended(Nullable<int> regionId, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_job_search_recommended_Result>("api_job_search_recommended", regionIdParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<api_job_search_service_Result> api_job_search_service(string categoryId, string positionId, Nullable<int> regionId, Nullable<int> termId, Nullable<int> gender, Nullable<bool> monMorning, Nullable<bool> monAfternoon, Nullable<bool> monNight, Nullable<bool> tueMorning, Nullable<bool> tueAfternoon, Nullable<bool> tueNight, Nullable<bool> wedMorning, Nullable<bool> wedAfternoon, Nullable<bool> wedNight, Nullable<bool> thuMorning, Nullable<bool> thuAfternoon, Nullable<bool> thuNight, Nullable<bool> friMorning, Nullable<bool> friAfternoon, Nullable<bool> friNight, Nullable<bool> satMorning, Nullable<bool> satAfternoon, Nullable<bool> satNight, Nullable<bool> sunMorning, Nullable<bool> sunAfternoon, Nullable<bool> sunNight, Nullable<int> orderById, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var categoryIdParameter = categoryId != null ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(string));
    
            var positionIdParameter = positionId != null ?
                new ObjectParameter("PositionId", positionId) :
                new ObjectParameter("PositionId", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            var orderByIdParameter = orderById.HasValue ?
                new ObjectParameter("OrderById", orderById) :
                new ObjectParameter("OrderById", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_job_search_service_Result>("api_job_search_service", categoryIdParameter, positionIdParameter, regionIdParameter, termIdParameter, genderParameter, monMorningParameter, monAfternoonParameter, monNightParameter, tueMorningParameter, tueAfternoonParameter, tueNightParameter, wedMorningParameter, wedAfternoonParameter, wedNightParameter, thuMorningParameter, thuAfternoonParameter, thuNightParameter, friMorningParameter, friAfternoonParameter, friNightParameter, satMorningParameter, satAfternoonParameter, satNightParameter, sunMorningParameter, sunAfternoonParameter, sunNightParameter, orderByIdParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<api_job_search_tutor_Result> api_job_search_tutor(string levelId, string paperId, Nullable<int> regionId, Nullable<int> termId, Nullable<int> gender, Nullable<bool> monMorning, Nullable<bool> monAfternoon, Nullable<bool> monNight, Nullable<bool> tueMorning, Nullable<bool> tueAfternoon, Nullable<bool> tueNight, Nullable<bool> wedMorning, Nullable<bool> wedAfternoon, Nullable<bool> wedNight, Nullable<bool> thuMorning, Nullable<bool> thuAfternoon, Nullable<bool> thuNight, Nullable<bool> friMorning, Nullable<bool> friAfternoon, Nullable<bool> friNight, Nullable<bool> satMorning, Nullable<bool> satAfternoon, Nullable<bool> satNight, Nullable<bool> sunMorning, Nullable<bool> sunAfternoon, Nullable<bool> sunNight, Nullable<int> orderById, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var levelIdParameter = levelId != null ?
                new ObjectParameter("LevelId", levelId) :
                new ObjectParameter("LevelId", typeof(string));
    
            var paperIdParameter = paperId != null ?
                new ObjectParameter("PaperId", paperId) :
                new ObjectParameter("PaperId", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            var orderByIdParameter = orderById.HasValue ?
                new ObjectParameter("OrderById", orderById) :
                new ObjectParameter("OrderById", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_job_search_tutor_Result>("api_job_search_tutor", levelIdParameter, paperIdParameter, regionIdParameter, termIdParameter, genderParameter, monMorningParameter, monAfternoonParameter, monNightParameter, tueMorningParameter, tueAfternoonParameter, tueNightParameter, wedMorningParameter, wedAfternoonParameter, wedNightParameter, thuMorningParameter, thuAfternoonParameter, thuNightParameter, friMorningParameter, friAfternoonParameter, friNightParameter, satMorningParameter, satAfternoonParameter, satNightParameter, sunMorningParameter, sunAfternoonParameter, sunNightParameter, orderByIdParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int api_job_sign_in(Nullable<long> jobId, Nullable<int> jobTypeId, Nullable<long> userId, Nullable<long> companyId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_job_sign_in", jobIdParameter, jobTypeIdParameter, userIdParameter, companyIdParameter);
        }
    
        public virtual int api_job_sign_out(Nullable<long> jobId, Nullable<int> jobTypeId, Nullable<long> userId, Nullable<long> companyId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_job_sign_out", jobIdParameter, jobTypeIdParameter, userIdParameter, companyIdParameter);
        }
    
        public virtual int api_job_status_approved(Nullable<long> jobId, Nullable<long> jobTypeId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_job_status_approved", jobIdParameter, jobTypeIdParameter);
        }
    
        public virtual int api_job_status_rejected(Nullable<long> jobId, Nullable<long> jobTypeId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_job_status_rejected", jobIdParameter, jobTypeIdParameter);
        }
    
        public virtual ObjectResult<api_job_trade_create_Result> api_job_trade_create(Nullable<long> companyId, string orderIds)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var orderIdsParameter = orderIds != null ?
                new ObjectParameter("OrderIds", orderIds) :
                new ObjectParameter("OrderIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_job_trade_create_Result>("api_job_trade_create", companyIdParameter, orderIdsParameter);
        }
    
        public virtual ObjectResult<api_job_trade_paid_Result> api_job_trade_paid(Nullable<long> companyId, Nullable<long> tradeId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var tradeIdParameter = tradeId.HasValue ?
                new ObjectParameter("TradeId", tradeId) :
                new ObjectParameter("TradeId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_job_trade_paid_Result>("api_job_trade_paid", companyIdParameter, tradeIdParameter);
        }
    
        public virtual int api_job_update_absent(Nullable<long> jobId, Nullable<int> jobTypeId, Nullable<long> userId, Nullable<long> companyId, Nullable<System.DateTime> today, Nullable<int> absentComplainId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var todayParameter = today.HasValue ?
                new ObjectParameter("Today", today) :
                new ObjectParameter("Today", typeof(System.DateTime));
    
            var absentComplainIdParameter = absentComplainId.HasValue ?
                new ObjectParameter("AbsentComplainId", absentComplainId) :
                new ObjectParameter("AbsentComplainId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_job_update_absent", jobIdParameter, jobTypeIdParameter, userIdParameter, companyIdParameter, todayParameter, absentComplainIdParameter);
        }
    
        public virtual int api_job_update_end(Nullable<long> jobId, Nullable<int> jobTypeId, Nullable<long> userId, Nullable<long> companyId, Nullable<int> reasonId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var reasonIdParameter = reasonId.HasValue ?
                new ObjectParameter("ReasonId", reasonId) :
                new ObjectParameter("ReasonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_job_update_end", jobIdParameter, jobTypeIdParameter, userIdParameter, companyIdParameter, reasonIdParameter);
        }
    
        public virtual int api_job_update_order_line_amount(Nullable<long> orderLineId, Nullable<long> companyId, Nullable<decimal> amount)
        {
            var orderLineIdParameter = orderLineId.HasValue ?
                new ObjectParameter("OrderLineId", orderLineId) :
                new ObjectParameter("OrderLineId", typeof(long));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_job_update_order_line_amount", orderLineIdParameter, companyIdParameter, amountParameter);
        }
    
        public virtual int api_job_update_sign_in(Nullable<long> jobId, Nullable<int> jobTypeId, Nullable<long> userId, Nullable<long> companyId, Nullable<System.DateTime> dateUpdatedSignedIn, Nullable<System.DateTime> dateUpdatedSignedOut, Nullable<decimal> wageAdjusted, string note, Nullable<System.DateTime> today)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var dateUpdatedSignedInParameter = dateUpdatedSignedIn.HasValue ?
                new ObjectParameter("DateUpdatedSignedIn", dateUpdatedSignedIn) :
                new ObjectParameter("DateUpdatedSignedIn", typeof(System.DateTime));
    
            var dateUpdatedSignedOutParameter = dateUpdatedSignedOut.HasValue ?
                new ObjectParameter("DateUpdatedSignedOut", dateUpdatedSignedOut) :
                new ObjectParameter("DateUpdatedSignedOut", typeof(System.DateTime));
    
            var wageAdjustedParameter = wageAdjusted.HasValue ?
                new ObjectParameter("WageAdjusted", wageAdjusted) :
                new ObjectParameter("WageAdjusted", typeof(decimal));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var todayParameter = today.HasValue ?
                new ObjectParameter("Today", today) :
                new ObjectParameter("Today", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_job_update_sign_in", jobIdParameter, jobTypeIdParameter, userIdParameter, companyIdParameter, dateUpdatedSignedInParameter, dateUpdatedSignedOutParameter, wageAdjustedParameter, noteParameter, todayParameter);
        }
    
        public virtual int api_log_company_logon(Nullable<long> companyId, string device, string iPAddress, string action, string versionNumber)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var deviceParameter = device != null ?
                new ObjectParameter("Device", device) :
                new ObjectParameter("Device", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var versionNumberParameter = versionNumber != null ?
                new ObjectParameter("VersionNumber", versionNumber) :
                new ObjectParameter("VersionNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_log_company_logon", companyIdParameter, deviceParameter, iPAddressParameter, actionParameter, versionNumberParameter);
        }
    
        public virtual int api_log_user_logon(Nullable<long> userId, string device, string iPAddress, string action, string versionNumber)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var deviceParameter = device != null ?
                new ObjectParameter("Device", device) :
                new ObjectParameter("Device", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var versionNumberParameter = versionNumber != null ?
                new ObjectParameter("VersionNumber", versionNumber) :
                new ObjectParameter("VersionNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_log_user_logon", userIdParameter, deviceParameter, iPAddressParameter, actionParameter, versionNumberParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> api_order_create(Nullable<long> jobId, Nullable<int> jobTypeId, Nullable<long> companyId, Nullable<System.DateTime> date)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("api_order_create", jobIdParameter, jobTypeIdParameter, companyIdParameter, dateParameter);
        }
    
        public virtual int api_publish_activity_job(Nullable<long> companyId, string title, Nullable<int> positionId, Nullable<int> regionId, Nullable<int> wageUnitId, Nullable<decimal> wage, Nullable<bool> includeCommission, Nullable<bool> includeDinner, Nullable<bool> includeRoom, Nullable<int> termId, Nullable<int> gender, Nullable<int> peopleRequired, string contact, string contactPhone, string address, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateExpiry, Nullable<System.DateTime> workFrom, Nullable<System.DateTime> workEnd, string description, Nullable<bool> monMorning, Nullable<bool> monAfternoon, Nullable<bool> monNight, Nullable<bool> tueMorning, Nullable<bool> tueAfternoon, Nullable<bool> tueNight, Nullable<bool> wedMorning, Nullable<bool> wedAfternoon, Nullable<bool> wedNight, Nullable<bool> thuMorning, Nullable<bool> thuAfternoon, Nullable<bool> thuNight, Nullable<bool> friMorning, Nullable<bool> friAfternoon, Nullable<bool> friNight, Nullable<bool> satMorning, Nullable<bool> satAfternoon, Nullable<bool> satNight, Nullable<bool> sunMorning, Nullable<bool> sunAfternoon, Nullable<bool> sunNight)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var positionIdParameter = positionId.HasValue ?
                new ObjectParameter("PositionId", positionId) :
                new ObjectParameter("PositionId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var wageUnitIdParameter = wageUnitId.HasValue ?
                new ObjectParameter("WageUnitId", wageUnitId) :
                new ObjectParameter("WageUnitId", typeof(int));
    
            var wageParameter = wage.HasValue ?
                new ObjectParameter("Wage", wage) :
                new ObjectParameter("Wage", typeof(decimal));
    
            var includeCommissionParameter = includeCommission.HasValue ?
                new ObjectParameter("IncludeCommission", includeCommission) :
                new ObjectParameter("IncludeCommission", typeof(bool));
    
            var includeDinnerParameter = includeDinner.HasValue ?
                new ObjectParameter("IncludeDinner", includeDinner) :
                new ObjectParameter("IncludeDinner", typeof(bool));
    
            var includeRoomParameter = includeRoom.HasValue ?
                new ObjectParameter("IncludeRoom", includeRoom) :
                new ObjectParameter("IncludeRoom", typeof(bool));
    
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var peopleRequiredParameter = peopleRequired.HasValue ?
                new ObjectParameter("PeopleRequired", peopleRequired) :
                new ObjectParameter("PeopleRequired", typeof(int));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var contactPhoneParameter = contactPhone != null ?
                new ObjectParameter("ContactPhone", contactPhone) :
                new ObjectParameter("ContactPhone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateExpiryParameter = dateExpiry.HasValue ?
                new ObjectParameter("DateExpiry", dateExpiry) :
                new ObjectParameter("DateExpiry", typeof(System.DateTime));
    
            var workFromParameter = workFrom.HasValue ?
                new ObjectParameter("WorkFrom", workFrom) :
                new ObjectParameter("WorkFrom", typeof(System.DateTime));
    
            var workEndParameter = workEnd.HasValue ?
                new ObjectParameter("WorkEnd", workEnd) :
                new ObjectParameter("WorkEnd", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_publish_activity_job", companyIdParameter, titleParameter, positionIdParameter, regionIdParameter, wageUnitIdParameter, wageParameter, includeCommissionParameter, includeDinnerParameter, includeRoomParameter, termIdParameter, genderParameter, peopleRequiredParameter, contactParameter, contactPhoneParameter, addressParameter, dateFromParameter, dateExpiryParameter, workFromParameter, workEndParameter, descriptionParameter, monMorningParameter, monAfternoonParameter, monNightParameter, tueMorningParameter, tueAfternoonParameter, tueNightParameter, wedMorningParameter, wedAfternoonParameter, wedNightParameter, thuMorningParameter, thuAfternoonParameter, thuNightParameter, friMorningParameter, friAfternoonParameter, friNightParameter, satMorningParameter, satAfternoonParameter, satNightParameter, sunMorningParameter, sunAfternoonParameter, sunNightParameter);
        }
    
        public virtual int api_publish_campus_job(Nullable<long> companyId, string title, Nullable<int> categoryId, Nullable<int> schoolId, Nullable<int> regionId, Nullable<int> gender, Nullable<int> peopleRequired, string contact, string contactPhone, string address, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateExpiry, Nullable<System.DateTime> workFrom, Nullable<System.DateTime> workEnd, string description, Nullable<bool> monMorning, Nullable<bool> monAfternoon, Nullable<bool> monNight, Nullable<bool> tueMorning, Nullable<bool> tueAfternoon, Nullable<bool> tueNight, Nullable<bool> wedMorning, Nullable<bool> wedAfternoon, Nullable<bool> wedNight, Nullable<bool> thuMorning, Nullable<bool> thuAfternoon, Nullable<bool> thuNight, Nullable<bool> friMorning, Nullable<bool> friAfternoon, Nullable<bool> friNight, Nullable<bool> satMorning, Nullable<bool> satAfternoon, Nullable<bool> satNight, Nullable<bool> sunMorning, Nullable<bool> sunAfternoon, Nullable<bool> sunNight)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var peopleRequiredParameter = peopleRequired.HasValue ?
                new ObjectParameter("PeopleRequired", peopleRequired) :
                new ObjectParameter("PeopleRequired", typeof(int));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var contactPhoneParameter = contactPhone != null ?
                new ObjectParameter("ContactPhone", contactPhone) :
                new ObjectParameter("ContactPhone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateExpiryParameter = dateExpiry.HasValue ?
                new ObjectParameter("DateExpiry", dateExpiry) :
                new ObjectParameter("DateExpiry", typeof(System.DateTime));
    
            var workFromParameter = workFrom.HasValue ?
                new ObjectParameter("WorkFrom", workFrom) :
                new ObjectParameter("WorkFrom", typeof(System.DateTime));
    
            var workEndParameter = workEnd.HasValue ?
                new ObjectParameter("WorkEnd", workEnd) :
                new ObjectParameter("WorkEnd", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_publish_campus_job", companyIdParameter, titleParameter, categoryIdParameter, schoolIdParameter, regionIdParameter, genderParameter, peopleRequiredParameter, contactParameter, contactPhoneParameter, addressParameter, dateFromParameter, dateExpiryParameter, workFromParameter, workEndParameter, descriptionParameter, monMorningParameter, monAfternoonParameter, monNightParameter, tueMorningParameter, tueAfternoonParameter, tueNightParameter, wedMorningParameter, wedAfternoonParameter, wedNightParameter, thuMorningParameter, thuAfternoonParameter, thuNightParameter, friMorningParameter, friAfternoonParameter, friNightParameter, satMorningParameter, satAfternoonParameter, satNightParameter, sunMorningParameter, sunAfternoonParameter, sunNightParameter);
        }
    
        public virtual int api_publish_intern_job(Nullable<long> companyId, string title, Nullable<int> category, Nullable<int> regionId, Nullable<int> wageUnitId, Nullable<decimal> wage, Nullable<bool> includeCommission, Nullable<bool> includeDinner, Nullable<bool> includeRoom, Nullable<int> gender, Nullable<int> peopleRequired, string contact, string contactPhone, string address, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateExpiry, Nullable<System.DateTime> workFrom, Nullable<System.DateTime> workEnd, string description, Nullable<bool> monMorning, Nullable<bool> monAfternoon, Nullable<bool> monNight, Nullable<bool> tueMorning, Nullable<bool> tueAfternoon, Nullable<bool> tueNight, Nullable<bool> wedMorning, Nullable<bool> wedAfternoon, Nullable<bool> wedNight, Nullable<bool> thuMorning, Nullable<bool> thuAfternoon, Nullable<bool> thuNight, Nullable<bool> friMorning, Nullable<bool> friAfternoon, Nullable<bool> friNight, Nullable<bool> satMorning, Nullable<bool> satAfternoon, Nullable<bool> satNight, Nullable<bool> sunMorning, Nullable<bool> sunAfternoon, Nullable<bool> sunNight)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var wageUnitIdParameter = wageUnitId.HasValue ?
                new ObjectParameter("WageUnitId", wageUnitId) :
                new ObjectParameter("WageUnitId", typeof(int));
    
            var wageParameter = wage.HasValue ?
                new ObjectParameter("Wage", wage) :
                new ObjectParameter("Wage", typeof(decimal));
    
            var includeCommissionParameter = includeCommission.HasValue ?
                new ObjectParameter("IncludeCommission", includeCommission) :
                new ObjectParameter("IncludeCommission", typeof(bool));
    
            var includeDinnerParameter = includeDinner.HasValue ?
                new ObjectParameter("IncludeDinner", includeDinner) :
                new ObjectParameter("IncludeDinner", typeof(bool));
    
            var includeRoomParameter = includeRoom.HasValue ?
                new ObjectParameter("IncludeRoom", includeRoom) :
                new ObjectParameter("IncludeRoom", typeof(bool));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var peopleRequiredParameter = peopleRequired.HasValue ?
                new ObjectParameter("PeopleRequired", peopleRequired) :
                new ObjectParameter("PeopleRequired", typeof(int));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var contactPhoneParameter = contactPhone != null ?
                new ObjectParameter("ContactPhone", contactPhone) :
                new ObjectParameter("ContactPhone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateExpiryParameter = dateExpiry.HasValue ?
                new ObjectParameter("DateExpiry", dateExpiry) :
                new ObjectParameter("DateExpiry", typeof(System.DateTime));
    
            var workFromParameter = workFrom.HasValue ?
                new ObjectParameter("WorkFrom", workFrom) :
                new ObjectParameter("WorkFrom", typeof(System.DateTime));
    
            var workEndParameter = workEnd.HasValue ?
                new ObjectParameter("WorkEnd", workEnd) :
                new ObjectParameter("WorkEnd", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_publish_intern_job", companyIdParameter, titleParameter, categoryParameter, regionIdParameter, wageUnitIdParameter, wageParameter, includeCommissionParameter, includeDinnerParameter, includeRoomParameter, genderParameter, peopleRequiredParameter, contactParameter, contactPhoneParameter, addressParameter, dateFromParameter, dateExpiryParameter, workFromParameter, workEndParameter, descriptionParameter, monMorningParameter, monAfternoonParameter, monNightParameter, tueMorningParameter, tueAfternoonParameter, tueNightParameter, wedMorningParameter, wedAfternoonParameter, wedNightParameter, thuMorningParameter, thuAfternoonParameter, thuNightParameter, friMorningParameter, friAfternoonParameter, friNightParameter, satMorningParameter, satAfternoonParameter, satNightParameter, sunMorningParameter, sunAfternoonParameter, sunNightParameter);
        }
    
        public virtual int api_publish_service_job(Nullable<long> companyId, string title, Nullable<int> categoryId, Nullable<int> positionId, Nullable<int> regionId, Nullable<int> wageUnitId, Nullable<decimal> wage, Nullable<bool> includeCommission, Nullable<bool> includeDinner, Nullable<bool> includeRoom, Nullable<int> termId, Nullable<int> gender, Nullable<int> peopleRequired, string contact, string contactPhone, string address, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateExpiry, Nullable<System.DateTime> workFrom, Nullable<System.DateTime> workEnd, string description, Nullable<bool> monMorning, Nullable<bool> monAfternoon, Nullable<bool> monNight, Nullable<bool> tueMorning, Nullable<bool> tueAfternoon, Nullable<bool> tueNight, Nullable<bool> wedMorning, Nullable<bool> wedAfternoon, Nullable<bool> wedNight, Nullable<bool> thuMorning, Nullable<bool> thuAfternoon, Nullable<bool> thuNight, Nullable<bool> friMorning, Nullable<bool> friAfternoon, Nullable<bool> friNight, Nullable<bool> satMorning, Nullable<bool> satAfternoon, Nullable<bool> satNight, Nullable<bool> sunMorning, Nullable<bool> sunAfternoon, Nullable<bool> sunNight)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var positionIdParameter = positionId.HasValue ?
                new ObjectParameter("PositionId", positionId) :
                new ObjectParameter("PositionId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var wageUnitIdParameter = wageUnitId.HasValue ?
                new ObjectParameter("WageUnitId", wageUnitId) :
                new ObjectParameter("WageUnitId", typeof(int));
    
            var wageParameter = wage.HasValue ?
                new ObjectParameter("Wage", wage) :
                new ObjectParameter("Wage", typeof(decimal));
    
            var includeCommissionParameter = includeCommission.HasValue ?
                new ObjectParameter("IncludeCommission", includeCommission) :
                new ObjectParameter("IncludeCommission", typeof(bool));
    
            var includeDinnerParameter = includeDinner.HasValue ?
                new ObjectParameter("IncludeDinner", includeDinner) :
                new ObjectParameter("IncludeDinner", typeof(bool));
    
            var includeRoomParameter = includeRoom.HasValue ?
                new ObjectParameter("IncludeRoom", includeRoom) :
                new ObjectParameter("IncludeRoom", typeof(bool));
    
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var peopleRequiredParameter = peopleRequired.HasValue ?
                new ObjectParameter("PeopleRequired", peopleRequired) :
                new ObjectParameter("PeopleRequired", typeof(int));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var contactPhoneParameter = contactPhone != null ?
                new ObjectParameter("ContactPhone", contactPhone) :
                new ObjectParameter("ContactPhone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateExpiryParameter = dateExpiry.HasValue ?
                new ObjectParameter("DateExpiry", dateExpiry) :
                new ObjectParameter("DateExpiry", typeof(System.DateTime));
    
            var workFromParameter = workFrom.HasValue ?
                new ObjectParameter("WorkFrom", workFrom) :
                new ObjectParameter("WorkFrom", typeof(System.DateTime));
    
            var workEndParameter = workEnd.HasValue ?
                new ObjectParameter("WorkEnd", workEnd) :
                new ObjectParameter("WorkEnd", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_publish_service_job", companyIdParameter, titleParameter, categoryIdParameter, positionIdParameter, regionIdParameter, wageUnitIdParameter, wageParameter, includeCommissionParameter, includeDinnerParameter, includeRoomParameter, termIdParameter, genderParameter, peopleRequiredParameter, contactParameter, contactPhoneParameter, addressParameter, dateFromParameter, dateExpiryParameter, workFromParameter, workEndParameter, descriptionParameter, monMorningParameter, monAfternoonParameter, monNightParameter, tueMorningParameter, tueAfternoonParameter, tueNightParameter, wedMorningParameter, wedAfternoonParameter, wedNightParameter, thuMorningParameter, thuAfternoonParameter, thuNightParameter, friMorningParameter, friAfternoonParameter, friNightParameter, satMorningParameter, satAfternoonParameter, satNightParameter, sunMorningParameter, sunAfternoonParameter, sunNightParameter);
        }
    
        public virtual int api_publish_tutor_job(Nullable<long> companyId, string title, Nullable<int> levelId, Nullable<int> paperId, Nullable<int> regionId, Nullable<int> wageUnitId, Nullable<decimal> wage, Nullable<bool> includeCommission, Nullable<bool> includeDinner, Nullable<bool> includeRoom, Nullable<int> termId, Nullable<int> gender, Nullable<int> peopleRequired, string contact, string contactPhone, string address, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateExpiry, Nullable<System.DateTime> workFrom, Nullable<System.DateTime> workEnd, string description, Nullable<bool> monMorning, Nullable<bool> monAfternoon, Nullable<bool> monNight, Nullable<bool> tueMorning, Nullable<bool> tueAfternoon, Nullable<bool> tueNight, Nullable<bool> wedMorning, Nullable<bool> wedAfternoon, Nullable<bool> wedNight, Nullable<bool> thuMorning, Nullable<bool> thuAfternoon, Nullable<bool> thuNight, Nullable<bool> friMorning, Nullable<bool> friAfternoon, Nullable<bool> friNight, Nullable<bool> satMorning, Nullable<bool> satAfternoon, Nullable<bool> satNight, Nullable<bool> sunMorning, Nullable<bool> sunAfternoon, Nullable<bool> sunNight)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var levelIdParameter = levelId.HasValue ?
                new ObjectParameter("LevelId", levelId) :
                new ObjectParameter("LevelId", typeof(int));
    
            var paperIdParameter = paperId.HasValue ?
                new ObjectParameter("PaperId", paperId) :
                new ObjectParameter("PaperId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var wageUnitIdParameter = wageUnitId.HasValue ?
                new ObjectParameter("WageUnitId", wageUnitId) :
                new ObjectParameter("WageUnitId", typeof(int));
    
            var wageParameter = wage.HasValue ?
                new ObjectParameter("Wage", wage) :
                new ObjectParameter("Wage", typeof(decimal));
    
            var includeCommissionParameter = includeCommission.HasValue ?
                new ObjectParameter("IncludeCommission", includeCommission) :
                new ObjectParameter("IncludeCommission", typeof(bool));
    
            var includeDinnerParameter = includeDinner.HasValue ?
                new ObjectParameter("IncludeDinner", includeDinner) :
                new ObjectParameter("IncludeDinner", typeof(bool));
    
            var includeRoomParameter = includeRoom.HasValue ?
                new ObjectParameter("IncludeRoom", includeRoom) :
                new ObjectParameter("IncludeRoom", typeof(bool));
    
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var peopleRequiredParameter = peopleRequired.HasValue ?
                new ObjectParameter("PeopleRequired", peopleRequired) :
                new ObjectParameter("PeopleRequired", typeof(int));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var contactPhoneParameter = contactPhone != null ?
                new ObjectParameter("ContactPhone", contactPhone) :
                new ObjectParameter("ContactPhone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateExpiryParameter = dateExpiry.HasValue ?
                new ObjectParameter("DateExpiry", dateExpiry) :
                new ObjectParameter("DateExpiry", typeof(System.DateTime));
    
            var workFromParameter = workFrom.HasValue ?
                new ObjectParameter("WorkFrom", workFrom) :
                new ObjectParameter("WorkFrom", typeof(System.DateTime));
    
            var workEndParameter = workEnd.HasValue ?
                new ObjectParameter("WorkEnd", workEnd) :
                new ObjectParameter("WorkEnd", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var monMorningParameter = monMorning.HasValue ?
                new ObjectParameter("MonMorning", monMorning) :
                new ObjectParameter("MonMorning", typeof(bool));
    
            var monAfternoonParameter = monAfternoon.HasValue ?
                new ObjectParameter("MonAfternoon", monAfternoon) :
                new ObjectParameter("MonAfternoon", typeof(bool));
    
            var monNightParameter = monNight.HasValue ?
                new ObjectParameter("MonNight", monNight) :
                new ObjectParameter("MonNight", typeof(bool));
    
            var tueMorningParameter = tueMorning.HasValue ?
                new ObjectParameter("TueMorning", tueMorning) :
                new ObjectParameter("TueMorning", typeof(bool));
    
            var tueAfternoonParameter = tueAfternoon.HasValue ?
                new ObjectParameter("TueAfternoon", tueAfternoon) :
                new ObjectParameter("TueAfternoon", typeof(bool));
    
            var tueNightParameter = tueNight.HasValue ?
                new ObjectParameter("TueNight", tueNight) :
                new ObjectParameter("TueNight", typeof(bool));
    
            var wedMorningParameter = wedMorning.HasValue ?
                new ObjectParameter("WedMorning", wedMorning) :
                new ObjectParameter("WedMorning", typeof(bool));
    
            var wedAfternoonParameter = wedAfternoon.HasValue ?
                new ObjectParameter("WedAfternoon", wedAfternoon) :
                new ObjectParameter("WedAfternoon", typeof(bool));
    
            var wedNightParameter = wedNight.HasValue ?
                new ObjectParameter("WedNight", wedNight) :
                new ObjectParameter("WedNight", typeof(bool));
    
            var thuMorningParameter = thuMorning.HasValue ?
                new ObjectParameter("ThuMorning", thuMorning) :
                new ObjectParameter("ThuMorning", typeof(bool));
    
            var thuAfternoonParameter = thuAfternoon.HasValue ?
                new ObjectParameter("ThuAfternoon", thuAfternoon) :
                new ObjectParameter("ThuAfternoon", typeof(bool));
    
            var thuNightParameter = thuNight.HasValue ?
                new ObjectParameter("ThuNight", thuNight) :
                new ObjectParameter("ThuNight", typeof(bool));
    
            var friMorningParameter = friMorning.HasValue ?
                new ObjectParameter("FriMorning", friMorning) :
                new ObjectParameter("FriMorning", typeof(bool));
    
            var friAfternoonParameter = friAfternoon.HasValue ?
                new ObjectParameter("FriAfternoon", friAfternoon) :
                new ObjectParameter("FriAfternoon", typeof(bool));
    
            var friNightParameter = friNight.HasValue ?
                new ObjectParameter("FriNight", friNight) :
                new ObjectParameter("FriNight", typeof(bool));
    
            var satMorningParameter = satMorning.HasValue ?
                new ObjectParameter("SatMorning", satMorning) :
                new ObjectParameter("SatMorning", typeof(bool));
    
            var satAfternoonParameter = satAfternoon.HasValue ?
                new ObjectParameter("SatAfternoon", satAfternoon) :
                new ObjectParameter("SatAfternoon", typeof(bool));
    
            var satNightParameter = satNight.HasValue ?
                new ObjectParameter("SatNight", satNight) :
                new ObjectParameter("SatNight", typeof(bool));
    
            var sunMorningParameter = sunMorning.HasValue ?
                new ObjectParameter("SunMorning", sunMorning) :
                new ObjectParameter("SunMorning", typeof(bool));
    
            var sunAfternoonParameter = sunAfternoon.HasValue ?
                new ObjectParameter("SunAfternoon", sunAfternoon) :
                new ObjectParameter("SunAfternoon", typeof(bool));
    
            var sunNightParameter = sunNight.HasValue ?
                new ObjectParameter("SunNight", sunNight) :
                new ObjectParameter("SunNight", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_publish_tutor_job", companyIdParameter, titleParameter, levelIdParameter, paperIdParameter, regionIdParameter, wageUnitIdParameter, wageParameter, includeCommissionParameter, includeDinnerParameter, includeRoomParameter, termIdParameter, genderParameter, peopleRequiredParameter, contactParameter, contactPhoneParameter, addressParameter, dateFromParameter, dateExpiryParameter, workFromParameter, workEndParameter, descriptionParameter, monMorningParameter, monAfternoonParameter, monNightParameter, tueMorningParameter, tueAfternoonParameter, tueNightParameter, wedMorningParameter, wedAfternoonParameter, wedNightParameter, thuMorningParameter, thuAfternoonParameter, thuNightParameter, friMorningParameter, friAfternoonParameter, friNightParameter, satMorningParameter, satAfternoonParameter, satNightParameter, sunMorningParameter, sunAfternoonParameter, sunNightParameter);
        }
    
        public virtual ObjectResult<api_register_company_Result> api_register_company(string mobile, string mobileVerificationCode, string fullName, string salt, string hashedPassword, string device, string deviceToken, string iPAddress, Nullable<int> downloadFromApplicationId)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var mobileVerificationCodeParameter = mobileVerificationCode != null ?
                new ObjectParameter("MobileVerificationCode", mobileVerificationCode) :
                new ObjectParameter("MobileVerificationCode", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            var hashedPasswordParameter = hashedPassword != null ?
                new ObjectParameter("HashedPassword", hashedPassword) :
                new ObjectParameter("HashedPassword", typeof(string));
    
            var deviceParameter = device != null ?
                new ObjectParameter("Device", device) :
                new ObjectParameter("Device", typeof(string));
    
            var deviceTokenParameter = deviceToken != null ?
                new ObjectParameter("DeviceToken", deviceToken) :
                new ObjectParameter("DeviceToken", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var downloadFromApplicationIdParameter = downloadFromApplicationId.HasValue ?
                new ObjectParameter("DownloadFromApplicationId", downloadFromApplicationId) :
                new ObjectParameter("DownloadFromApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_register_company_Result>("api_register_company", mobileParameter, mobileVerificationCodeParameter, fullNameParameter, saltParameter, hashedPasswordParameter, deviceParameter, deviceTokenParameter, iPAddressParameter, downloadFromApplicationIdParameter);
        }
    
        public virtual ObjectResult<api_register_user_Result> api_register_user(string mobile, string mobileVerificationCode, Nullable<int> schoolId, string salt, string hashedPassword, string device, string deviceToken, string iPAddress, Nullable<long> promoterUserId, Nullable<int> downloadFromApplicationId)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var mobileVerificationCodeParameter = mobileVerificationCode != null ?
                new ObjectParameter("MobileVerificationCode", mobileVerificationCode) :
                new ObjectParameter("MobileVerificationCode", typeof(string));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            var hashedPasswordParameter = hashedPassword != null ?
                new ObjectParameter("HashedPassword", hashedPassword) :
                new ObjectParameter("HashedPassword", typeof(string));
    
            var deviceParameter = device != null ?
                new ObjectParameter("Device", device) :
                new ObjectParameter("Device", typeof(string));
    
            var deviceTokenParameter = deviceToken != null ?
                new ObjectParameter("DeviceToken", deviceToken) :
                new ObjectParameter("DeviceToken", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var promoterUserIdParameter = promoterUserId.HasValue ?
                new ObjectParameter("PromoterUserId", promoterUserId) :
                new ObjectParameter("PromoterUserId", typeof(long));
    
            var downloadFromApplicationIdParameter = downloadFromApplicationId.HasValue ?
                new ObjectParameter("DownloadFromApplicationId", downloadFromApplicationId) :
                new ObjectParameter("DownloadFromApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_register_user_Result>("api_register_user", mobileParameter, mobileVerificationCodeParameter, schoolIdParameter, saltParameter, hashedPasswordParameter, deviceParameter, deviceTokenParameter, iPAddressParameter, promoterUserIdParameter, downloadFromApplicationIdParameter);
        }
    
        public virtual int api_remove_user_bank_account(Nullable<long> userId, Nullable<long> accountId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_remove_user_bank_account", userIdParameter, accountIdParameter);
        }
    
        public virtual int api_update_baidu_userid(string token, string baiduUserId)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            var baiduUserIdParameter = baiduUserId != null ?
                new ObjectParameter("BaiduUserId", baiduUserId) :
                new ObjectParameter("BaiduUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_update_baidu_userid", tokenParameter, baiduUserIdParameter);
        }
    
        public virtual ObjectResult<api_update_company_info_Result> api_update_company_info(Nullable<long> companyId, string mobile, string fullName, string address, string introduction)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var introductionParameter = introduction != null ?
                new ObjectParameter("Introduction", introduction) :
                new ObjectParameter("Introduction", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_update_company_info_Result>("api_update_company_info", companyIdParameter, mobileParameter, fullNameParameter, addressParameter, introductionParameter);
        }
    
        public virtual int api_update_device_token(string token, string device, string deviceToken)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            var deviceParameter = device != null ?
                new ObjectParameter("Device", device) :
                new ObjectParameter("Device", typeof(string));
    
            var deviceTokenParameter = deviceToken != null ?
                new ObjectParameter("DeviceToken", deviceToken) :
                new ObjectParameter("DeviceToken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_update_device_token", tokenParameter, deviceParameter, deviceTokenParameter);
        }
    
        public virtual ObjectResult<api_update_user_info_Result> api_update_user_info(Nullable<long> userId, string mobile, Nullable<int> schoolId, string fullName, Nullable<System.DateTime> dateofBirth, Nullable<int> gender, Nullable<int> tall, Nullable<int> regionId, string qQ, string email, string major, string workExperience)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var dateofBirthParameter = dateofBirth.HasValue ?
                new ObjectParameter("DateofBirth", dateofBirth) :
                new ObjectParameter("DateofBirth", typeof(System.DateTime));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var tallParameter = tall.HasValue ?
                new ObjectParameter("Tall", tall) :
                new ObjectParameter("Tall", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var qQParameter = qQ != null ?
                new ObjectParameter("QQ", qQ) :
                new ObjectParameter("QQ", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var majorParameter = major != null ?
                new ObjectParameter("Major", major) :
                new ObjectParameter("Major", typeof(string));
    
            var workExperienceParameter = workExperience != null ?
                new ObjectParameter("WorkExperience", workExperience) :
                new ObjectParameter("WorkExperience", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_update_user_info_Result>("api_update_user_info", userIdParameter, mobileParameter, schoolIdParameter, fullNameParameter, dateofBirthParameter, genderParameter, tallParameter, regionIdParameter, qQParameter, emailParameter, majorParameter, workExperienceParameter);
        }
    
        public virtual int api_update_vibrate(string token, Nullable<bool> vibrate)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            var vibrateParameter = vibrate.HasValue ?
                new ObjectParameter("Vibrate", vibrate) :
                new ObjectParameter("Vibrate", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_update_vibrate", tokenParameter, vibrateParameter);
        }
    
        public virtual int api_update_voice_alert(string token, Nullable<bool> voiceAlert)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            var voiceAlertParameter = voiceAlert.HasValue ?
                new ObjectParameter("VoiceAlert", voiceAlert) :
                new ObjectParameter("VoiceAlert", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_update_voice_alert", tokenParameter, voiceAlertParameter);
        }
    
        public virtual int api_user_cancel_apply(Nullable<long> userId, Nullable<long> jobId, Nullable<int> jobTypeId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_user_cancel_apply", userIdParameter, jobIdParameter, jobTypeIdParameter);
        }
    
        public virtual ObjectResult<api_user_cash_out_Result> api_user_cash_out(Nullable<long> userId, Nullable<long> accountId, Nullable<decimal> amount)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_user_cash_out_Result>("api_user_cash_out", userIdParameter, accountIdParameter, amountParameter);
        }
    
        public virtual int api_user_cash_out_bak(Nullable<long> userId, Nullable<long> accountId, Nullable<decimal> amount)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_user_cash_out_bak", userIdParameter, accountIdParameter, amountParameter);
        }
    
        public virtual int api_user_change_password(Nullable<long> userId, string oldPassword, string newPassword)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var oldPasswordParameter = oldPassword != null ?
                new ObjectParameter("OldPassword", oldPassword) :
                new ObjectParameter("OldPassword", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_user_change_password", userIdParameter, oldPasswordParameter, newPasswordParameter);
        }
    
        public virtual ObjectResult<api_user_job_apply_Result> api_user_job_apply(Nullable<long> userId, Nullable<long> jobId, Nullable<int> jobTypeId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_user_job_apply_Result>("api_user_job_apply", userIdParameter, jobIdParameter, jobTypeIdParameter);
        }
    
        public virtual int api_user_job_complain(Nullable<long> userId, Nullable<long> jobId, Nullable<int> complainStatusId, Nullable<int> jobTypeId, string description)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(long));
    
            var complainStatusIdParameter = complainStatusId.HasValue ?
                new ObjectParameter("ComplainStatusId", complainStatusId) :
                new ObjectParameter("ComplainStatusId", typeof(int));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("api_user_job_complain", userIdParameter, jobIdParameter, complainStatusIdParameter, jobTypeIdParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<api_user_login_Result> api_user_login(Nullable<long> userId, string mobile, string device, string deviceToken, string iPAddress, Nullable<int> downloadFromApplicationId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var deviceParameter = device != null ?
                new ObjectParameter("Device", device) :
                new ObjectParameter("Device", typeof(string));
    
            var deviceTokenParameter = deviceToken != null ?
                new ObjectParameter("DeviceToken", deviceToken) :
                new ObjectParameter("DeviceToken", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var downloadFromApplicationIdParameter = downloadFromApplicationId.HasValue ?
                new ObjectParameter("DownloadFromApplicationId", downloadFromApplicationId) :
                new ObjectParameter("DownloadFromApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<api_user_login_Result>("api_user_login", userIdParameter, mobileParameter, deviceParameter, deviceTokenParameter, iPAddressParameter, downloadFromApplicationIdParameter);
        }
    
        public virtual int event_get_register_user_count_by_user(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("event_get_register_user_count_by_user", userIdParameter);
        }
    
        public virtual int event_push_register_message_by_region_or_user(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("event_push_register_message_by_region_or_user", userIdParameter);
        }
    
        public virtual int event_push_register_notify_message_by_region_or_user(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("event_push_register_notify_message_by_region_or_user", userIdParameter);
        }
    
        public virtual int event_push_register_promoter_user_messaeg_by_event2(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("event_push_register_promoter_user_messaeg_by_event2", userIdParameter);
        }
    
        public virtual int event_push_register_user_message_by_event2(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("event_push_register_user_message_by_event2", userIdParameter);
        }
    
        public virtual int job_backup_all()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_backup_all");
        }
    
        public virtual int job_backup_daily()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_backup_daily");
        }
    
        public virtual int job_backup_monthly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_backup_monthly");
        }
    
        public virtual int job_build_date()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_build_date");
        }
    
        public virtual int job_generate_device_version_stat_daily()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_generate_device_version_stat_daily");
        }
    
        public virtual int job_generate_device_version_stat_monthly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_generate_device_version_stat_monthly");
        }
    
        public virtual int job_generate_device_version_stat_total()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_generate_device_version_stat_total");
        }
    
        public virtual int job_generate_device_version_stat_weekly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_generate_device_version_stat_weekly");
        }
    
        public virtual int job_generate_job_stat_daily()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_generate_job_stat_daily");
        }
    
        public virtual int job_generate_job_stat_monthly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_generate_job_stat_monthly");
        }
    
        public virtual int job_generate_job_stat_weekly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_generate_job_stat_weekly");
        }
    
        public virtual int job_generate_promoter_stat_daily(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_generate_promoter_stat_daily", dateParameter);
        }
    
        public virtual int job_generate_promoter_stat_monthly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_generate_promoter_stat_monthly");
        }
    
        public virtual int job_generate_promoter_stat_weekly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_generate_promoter_stat_weekly");
        }
    
        public virtual int job_generate_promoter_total()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_generate_promoter_total");
        }
    
        public virtual int job_generate_user_registration_stat_daily(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_generate_user_registration_stat_daily", dateParameter);
        }
    
        public virtual int job_generate_user_registration_stat_monthly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_generate_user_registration_stat_monthly");
        }
    
        public virtual int job_generate_user_registration_stat_total()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_generate_user_registration_stat_total");
        }
    
        public virtual int job_generate_user_registration_stat_weekly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_generate_user_registration_stat_weekly");
        }
    
        public virtual int job_generate_user_retention_daily()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_generate_user_retention_daily");
        }
    
        public virtual int job_import_reptile_data()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_import_reptile_data");
        }
    
        public virtual int job_import_user_manually()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_import_user_manually");
        }
    
        public virtual int job_update_fake_view_times()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_update_fake_view_times");
        }
    
        public virtual int job_update_job_sticky()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("job_update_job_sticky");
        }
    
        public virtual ObjectResult<promoter_get_promoter_list_Result> promoter_get_promoter_list(Nullable<int> promoterId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<promoter_get_promoter_list_Result>("promoter_get_promoter_list", promoterIdParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<promoter_registration_user_Result> promoter_registration_user(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<long> promoterUserId, string promoterUserNameORMobile, string schoolname, string userMobile, string deviceVersion)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var promoterUserIdParameter = promoterUserId.HasValue ?
                new ObjectParameter("PromoterUserId", promoterUserId) :
                new ObjectParameter("PromoterUserId", typeof(long));
    
            var promoterUserNameORMobileParameter = promoterUserNameORMobile != null ?
                new ObjectParameter("PromoterUserNameORMobile", promoterUserNameORMobile) :
                new ObjectParameter("PromoterUserNameORMobile", typeof(string));
    
            var schoolnameParameter = schoolname != null ?
                new ObjectParameter("schoolname", schoolname) :
                new ObjectParameter("schoolname", typeof(string));
    
            var userMobileParameter = userMobile != null ?
                new ObjectParameter("UserMobile", userMobile) :
                new ObjectParameter("UserMobile", typeof(string));
    
            var deviceVersionParameter = deviceVersion != null ?
                new ObjectParameter("DeviceVersion", deviceVersion) :
                new ObjectParameter("DeviceVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<promoter_registration_user_Result>("promoter_registration_user", beginDateParameter, endDateParameter, promoterUserIdParameter, promoterUserNameORMobileParameter, schoolnameParameter, userMobileParameter, deviceVersionParameter);
        }
    
        public virtual int promoter_update_password(Nullable<int> promoterId, string hashedPassword, string salt)
        {
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            var hashedPasswordParameter = hashedPassword != null ?
                new ObjectParameter("hashedPassword", hashedPassword) :
                new ObjectParameter("hashedPassword", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("salt", salt) :
                new ObjectParameter("salt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("promoter_update_password", promoterIdParameter, hashedPasswordParameter, saltParameter);
        }
    
        public virtual ObjectResult<report_get_admin_promoter_daily_Result> report_get_admin_promoter_daily(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<int> createdUserId, Nullable<int> promoterId)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var createdUserIdParameter = createdUserId.HasValue ?
                new ObjectParameter("CreatedUserId", createdUserId) :
                new ObjectParameter("CreatedUserId", typeof(int));
    
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_admin_promoter_daily_Result>("report_get_admin_promoter_daily", beginDateParameter, endDateParameter, createdUserIdParameter, promoterIdParameter);
        }
    
        public virtual ObjectResult<report_get_admin_promoter_monthly_Result> report_get_admin_promoter_monthly(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<int> createdUserId, Nullable<int> promoterId)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var createdUserIdParameter = createdUserId.HasValue ?
                new ObjectParameter("CreatedUserId", createdUserId) :
                new ObjectParameter("CreatedUserId", typeof(int));
    
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_admin_promoter_monthly_Result>("report_get_admin_promoter_monthly", beginDateParameter, endDateParameter, createdUserIdParameter, promoterIdParameter);
        }
    
        public virtual ObjectResult<report_get_admin_promoter_total_Result> report_get_admin_promoter_total(Nullable<int> createdUserId, Nullable<int> promoterId)
        {
            var createdUserIdParameter = createdUserId.HasValue ?
                new ObjectParameter("CreatedUserId", createdUserId) :
                new ObjectParameter("CreatedUserId", typeof(int));
    
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_admin_promoter_total_Result>("report_get_admin_promoter_total", createdUserIdParameter, promoterIdParameter);
        }
    
        public virtual ObjectResult<report_get_admin_promoter_weekly_Result> report_get_admin_promoter_weekly(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<int> createdUserId, Nullable<int> promoterId)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var createdUserIdParameter = createdUserId.HasValue ?
                new ObjectParameter("CreatedUserId", createdUserId) :
                new ObjectParameter("CreatedUserId", typeof(int));
    
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_admin_promoter_weekly_Result>("report_get_admin_promoter_weekly", beginDateParameter, endDateParameter, createdUserIdParameter, promoterIdParameter);
        }
    
        public virtual ObjectResult<report_get_agent_promoter_daily_Result> report_get_agent_promoter_daily(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<int> promoterId, string promoterIds)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            var promoterIdsParameter = promoterIds != null ?
                new ObjectParameter("PromoterIds", promoterIds) :
                new ObjectParameter("PromoterIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_agent_promoter_daily_Result>("report_get_agent_promoter_daily", beginDateParameter, endDateParameter, promoterIdParameter, promoterIdsParameter);
        }
    
        public virtual ObjectResult<report_get_agent_promoter_monthly_Result> report_get_agent_promoter_monthly(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<int> promoterId, string promoterIds)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            var promoterIdsParameter = promoterIds != null ?
                new ObjectParameter("PromoterIds", promoterIds) :
                new ObjectParameter("PromoterIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_agent_promoter_monthly_Result>("report_get_agent_promoter_monthly", beginDateParameter, endDateParameter, promoterIdParameter, promoterIdsParameter);
        }
    
        public virtual ObjectResult<report_get_agent_promoter_total_Result> report_get_agent_promoter_total(Nullable<int> promoterId, string promoterIds)
        {
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            var promoterIdsParameter = promoterIds != null ?
                new ObjectParameter("PromoterIds", promoterIds) :
                new ObjectParameter("PromoterIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_agent_promoter_total_Result>("report_get_agent_promoter_total", promoterIdParameter, promoterIdsParameter);
        }
    
        public virtual ObjectResult<report_get_agent_promoter_weekly_Result> report_get_agent_promoter_weekly(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<int> promoterId, string promoterIds)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            var promoterIdsParameter = promoterIds != null ?
                new ObjectParameter("PromoterIds", promoterIds) :
                new ObjectParameter("PromoterIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_agent_promoter_weekly_Result>("report_get_agent_promoter_weekly", beginDateParameter, endDateParameter, promoterIdParameter, promoterIdsParameter);
        }
    
        public virtual ObjectResult<report_get_deviceversion_daily_Result> report_get_deviceversion_daily(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, string device, string version)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var deviceParameter = device != null ?
                new ObjectParameter("Device", device) :
                new ObjectParameter("Device", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_deviceversion_daily_Result>("report_get_deviceversion_daily", beginDateParameter, endDateParameter, deviceParameter, versionParameter);
        }
    
        public virtual ObjectResult<report_get_deviceversion_monthly_Result> report_get_deviceversion_monthly(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, string device, string version)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var deviceParameter = device != null ?
                new ObjectParameter("Device", device) :
                new ObjectParameter("Device", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_deviceversion_monthly_Result>("report_get_deviceversion_monthly", beginDateParameter, endDateParameter, deviceParameter, versionParameter);
        }
    
        public virtual ObjectResult<report_get_deviceversion_total_Result> report_get_deviceversion_total(string device)
        {
            var deviceParameter = device != null ?
                new ObjectParameter("Device", device) :
                new ObjectParameter("Device", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_deviceversion_total_Result>("report_get_deviceversion_total", deviceParameter);
        }
    
        public virtual ObjectResult<report_get_deviceversion_weekly_Result> report_get_deviceversion_weekly(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, string device, string version)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var deviceParameter = device != null ?
                new ObjectParameter("Device", device) :
                new ObjectParameter("Device", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_deviceversion_weekly_Result>("report_get_deviceversion_weekly", beginDateParameter, endDateParameter, deviceParameter, versionParameter);
        }
    
        public virtual ObjectResult<report_get_job_daily_Result> report_get_job_daily(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<int> cityId, Nullable<int> jobTypeId, Nullable<int> jobCategoryId, Nullable<int> groupId, string selectedCitieIds)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var jobCategoryIdParameter = jobCategoryId.HasValue ?
                new ObjectParameter("JobCategoryId", jobCategoryId) :
                new ObjectParameter("JobCategoryId", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var selectedCitieIdsParameter = selectedCitieIds != null ?
                new ObjectParameter("SelectedCitieIds", selectedCitieIds) :
                new ObjectParameter("SelectedCitieIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_job_daily_Result>("report_get_job_daily", beginDateParameter, endDateParameter, cityIdParameter, jobTypeIdParameter, jobCategoryIdParameter, groupIdParameter, selectedCitieIdsParameter);
        }
    
        public virtual ObjectResult<report_get_job_monthly_Result> report_get_job_monthly(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<int> cityId, Nullable<int> jobTypeId, Nullable<int> jobCategoryId, Nullable<int> groupId, string selectedCitieIds)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var jobCategoryIdParameter = jobCategoryId.HasValue ?
                new ObjectParameter("JobCategoryId", jobCategoryId) :
                new ObjectParameter("JobCategoryId", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var selectedCitieIdsParameter = selectedCitieIds != null ?
                new ObjectParameter("SelectedCitieIds", selectedCitieIds) :
                new ObjectParameter("SelectedCitieIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_job_monthly_Result>("report_get_job_monthly", beginDateParameter, endDateParameter, cityIdParameter, jobTypeIdParameter, jobCategoryIdParameter, groupIdParameter, selectedCitieIdsParameter);
        }
    
        public virtual ObjectResult<report_get_job_weekly_Result> report_get_job_weekly(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<int> cityId, Nullable<int> jobTypeId, Nullable<int> jobCategoryId, Nullable<int> groupId, string selectedCitieIds)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            var jobCategoryIdParameter = jobCategoryId.HasValue ?
                new ObjectParameter("JobCategoryId", jobCategoryId) :
                new ObjectParameter("JobCategoryId", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var selectedCitieIdsParameter = selectedCitieIds != null ?
                new ObjectParameter("SelectedCitieIds", selectedCitieIds) :
                new ObjectParameter("SelectedCitieIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_job_weekly_Result>("report_get_job_weekly", beginDateParameter, endDateParameter, cityIdParameter, jobTypeIdParameter, jobCategoryIdParameter, groupIdParameter, selectedCitieIdsParameter);
        }
    
        public virtual ObjectResult<report_get_latest_month_Result> report_get_latest_month(Nullable<int> topNumber)
        {
            var topNumberParameter = topNumber.HasValue ?
                new ObjectParameter("TopNumber", topNumber) :
                new ObjectParameter("TopNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_latest_month_Result>("report_get_latest_month", topNumberParameter);
        }
    
        public virtual ObjectResult<report_get_latest_week_Result> report_get_latest_week(Nullable<int> topNumber)
        {
            var topNumberParameter = topNumber.HasValue ?
                new ObjectParameter("TopNumber", topNumber) :
                new ObjectParameter("TopNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_latest_week_Result>("report_get_latest_week", topNumberParameter);
        }
    
        public virtual ObjectResult<report_get_latest_week_fromnow_Result> report_get_latest_week_fromnow(Nullable<int> topNumber)
        {
            var topNumberParameter = topNumber.HasValue ?
                new ObjectParameter("TopNumber", topNumber) :
                new ObjectParameter("TopNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_latest_week_fromnow_Result>("report_get_latest_week_fromnow", topNumberParameter);
        }
    
        public virtual ObjectResult<report_get_promoter_agent_promoter_Result> report_get_promoter_agent_promoter(Nullable<int> loginUserId)
        {
            var loginUserIdParameter = loginUserId.HasValue ?
                new ObjectParameter("LoginUserId", loginUserId) :
                new ObjectParameter("LoginUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_promoter_agent_promoter_Result>("report_get_promoter_agent_promoter", loginUserIdParameter);
        }
    
        public virtual ObjectResult<report_get_promoter_creator_Result> report_get_promoter_creator(Nullable<int> promoterId, Nullable<int> creatorId)
        {
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            var creatorIdParameter = creatorId.HasValue ?
                new ObjectParameter("CreatorId", creatorId) :
                new ObjectParameter("CreatorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_promoter_creator_Result>("report_get_promoter_creator", promoterIdParameter, creatorIdParameter);
        }
    
        public virtual ObjectResult<report_get_promoter_daily_Result> report_get_promoter_daily(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<int> promoterId)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_promoter_daily_Result>("report_get_promoter_daily", beginDateParameter, endDateParameter, promoterIdParameter);
        }
    
        public virtual ObjectResult<report_get_promoter_monthly_Result> report_get_promoter_monthly(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<int> promoterId)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_promoter_monthly_Result>("report_get_promoter_monthly", beginDateParameter, endDateParameter, promoterIdParameter);
        }
    
        public virtual ObjectResult<report_get_promoter_total_Result> report_get_promoter_total(Nullable<int> promoterId)
        {
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_promoter_total_Result>("report_get_promoter_total", promoterIdParameter);
        }
    
        public virtual ObjectResult<report_get_promoter_weekly_Result> report_get_promoter_weekly(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<int> promoterId)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var promoterIdParameter = promoterId.HasValue ?
                new ObjectParameter("PromoterId", promoterId) :
                new ObjectParameter("PromoterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_promoter_weekly_Result>("report_get_promoter_weekly", beginDateParameter, endDateParameter, promoterIdParameter);
        }
    
        public virtual ObjectResult<report_get_subjobtype_Result> report_get_subjobtype(Nullable<int> typeId)
        {
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_subjobtype_Result>("report_get_subjobtype", typeIdParameter);
        }
    
        public virtual ObjectResult<report_get_user_registration_daily_Result> report_get_user_registration_daily(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<int> regionId, Nullable<int> schoolId, string selectedCitieIds)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var selectedCitieIdsParameter = selectedCitieIds != null ?
                new ObjectParameter("SelectedCitieIds", selectedCitieIds) :
                new ObjectParameter("SelectedCitieIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_user_registration_daily_Result>("report_get_user_registration_daily", beginDateParameter, endDateParameter, regionIdParameter, schoolIdParameter, selectedCitieIdsParameter);
        }
    
        public virtual ObjectResult<report_get_user_registration_monthly_Result> report_get_user_registration_monthly(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<int> regionId, Nullable<int> schoolId, string selectedCitieIds)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var selectedCitieIdsParameter = selectedCitieIds != null ?
                new ObjectParameter("SelectedCitieIds", selectedCitieIds) :
                new ObjectParameter("SelectedCitieIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_user_registration_monthly_Result>("report_get_user_registration_monthly", beginDateParameter, endDateParameter, regionIdParameter, schoolIdParameter, selectedCitieIdsParameter);
        }
    
        public virtual ObjectResult<report_get_user_registration_school_Result> report_get_user_registration_school(Nullable<int> regionId, string selectedCitieIds)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var selectedCitieIdsParameter = selectedCitieIds != null ?
                new ObjectParameter("SelectedCitieIds", selectedCitieIds) :
                new ObjectParameter("SelectedCitieIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_user_registration_school_Result>("report_get_user_registration_school", regionIdParameter, selectedCitieIdsParameter);
        }
    
        public virtual ObjectResult<report_get_user_registration_total_Result> report_get_user_registration_total(Nullable<int> schoolId, string selectedCitieIds)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var selectedCitieIdsParameter = selectedCitieIds != null ?
                new ObjectParameter("SelectedCitieIds", selectedCitieIds) :
                new ObjectParameter("SelectedCitieIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_user_registration_total_Result>("report_get_user_registration_total", schoolIdParameter, selectedCitieIdsParameter);
        }
    
        public virtual ObjectResult<report_get_user_registration_weekly_Result> report_get_user_registration_weekly(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<int> regionId, Nullable<int> schoolId, string selectedCitieIds)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var selectedCitieIdsParameter = selectedCitieIds != null ?
                new ObjectParameter("SelectedCitieIds", selectedCitieIds) :
                new ObjectParameter("SelectedCitieIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_user_registration_weekly_Result>("report_get_user_registration_weekly", beginDateParameter, endDateParameter, regionIdParameter, schoolIdParameter, selectedCitieIdsParameter);
        }
    
        public virtual ObjectResult<report_get_user_retention_Result> report_get_user_retention(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_user_retention_Result>("report_get_user_retention", beginDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<report_get_user_school_Result> report_get_user_school(Nullable<int> regionId, string selectedCitieIds)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var selectedCitieIdsParameter = selectedCitieIds != null ?
                new ObjectParameter("SelectedCitieIds", selectedCitieIds) :
                new ObjectParameter("SelectedCitieIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_get_user_school_Result>("report_get_user_school", regionIdParameter, selectedCitieIdsParameter);
        }
    
        public virtual ObjectResult<rpt_get_event_stats_Result> rpt_get_event_stats()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_get_event_stats_Result>("rpt_get_event_stats");
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_admin_has_permission(Nullable<int> adminId, string requiredPermission)
        {
            var adminIdParameter = adminId.HasValue ?
                new ObjectParameter("AdminId", adminId) :
                new ObjectParameter("AdminId", typeof(int));
    
            var requiredPermissionParameter = requiredPermission != null ?
                new ObjectParameter("RequiredPermission", requiredPermission) :
                new ObjectParameter("RequiredPermission", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_admin_has_permission", adminIdParameter, requiredPermissionParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_admin_has_role(Nullable<int> adminId, string requiredRole)
        {
            var adminIdParameter = adminId.HasValue ?
                new ObjectParameter("AdminId", adminId) :
                new ObjectParameter("AdminId", typeof(int));
    
            var requiredRoleParameter = requiredRole != null ?
                new ObjectParameter("RequiredRole", requiredRole) :
                new ObjectParameter("RequiredRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_admin_has_role", adminIdParameter, requiredRoleParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_deadlock()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deadlock");
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_email_send(Nullable<long> userId, Nullable<long> companyId, Nullable<long> adminId, string mailFrom, string mailFromPassword, string mailTo, Nullable<bool> isBodyHTML, string subject, string body)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var adminIdParameter = adminId.HasValue ?
                new ObjectParameter("AdminId", adminId) :
                new ObjectParameter("AdminId", typeof(long));
    
            var mailFromParameter = mailFrom != null ?
                new ObjectParameter("MailFrom", mailFrom) :
                new ObjectParameter("MailFrom", typeof(string));
    
            var mailFromPasswordParameter = mailFromPassword != null ?
                new ObjectParameter("MailFromPassword", mailFromPassword) :
                new ObjectParameter("MailFromPassword", typeof(string));
    
            var mailToParameter = mailTo != null ?
                new ObjectParameter("MailTo", mailTo) :
                new ObjectParameter("MailTo", typeof(string));
    
            var isBodyHTMLParameter = isBodyHTML.HasValue ?
                new ObjectParameter("IsBodyHTML", isBodyHTML) :
                new ObjectParameter("IsBodyHTML", typeof(bool));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_email_send", userIdParameter, companyIdParameter, adminIdParameter, mailFromParameter, mailFromPasswordParameter, mailToParameter, isBodyHTMLParameter, subjectParameter, bodyParameter);
        }
    
        public virtual int sp_exception_log(string type, string message, string stackTrace, string iPAddress, string url, Nullable<int> userId, string application)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var stackTraceParameter = stackTrace != null ?
                new ObjectParameter("StackTrace", stackTrace) :
                new ObjectParameter("StackTrace", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var applicationParameter = application != null ?
                new ObjectParameter("Application", application) :
                new ObjectParameter("Application", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_exception_log", typeParameter, messageParameter, stackTraceParameter, iPAddressParameter, urlParameter, userIdParameter, applicationParameter);
        }
    
        public virtual ObjectResult<string> sp_get_reptile_originsiteaddress_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_get_reptile_originsiteaddress_list");
        }
    
        public virtual ObjectResult<sp_get_top_notification_Result> sp_get_top_notification()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_top_notification_Result>("sp_get_top_notification");
        }
    
        public virtual ObjectResult<Nullable<int>> sp_get_unread_message_count(Nullable<long> userId, Nullable<long> companyId, Nullable<long> messageId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var messageIdParameter = messageId.HasValue ?
                new ObjectParameter("MessageId", messageId) :
                new ObjectParameter("MessageId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_get_unread_message_count", userIdParameter, companyIdParameter, messageIdParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_import_reptile_data()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_import_reptile_data");
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<sp_text_Result> sp_text(string text)
        {
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_text_Result>("sp_text", textParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<web_get_user_job_apply_Result> web_get_user_job_apply(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<web_get_user_job_apply_Result>("web_get_user_job_apply", userIdParameter);
        }
    
        public virtual ObjectResult<web_job_search_Result> web_job_search(Nullable<int> pageIndex, Nullable<int> pageSize, string searchText, string categories, Nullable<int> regionId, Nullable<int> gender, Nullable<int> termId, Nullable<int> jobTypeId)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var categoriesParameter = categories != null ?
                new ObjectParameter("Categories", categories) :
                new ObjectParameter("Categories", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<web_job_search_Result>("web_job_search", pageIndexParameter, pageSizeParameter, searchTextParameter, categoriesParameter, regionIdParameter, genderParameter, termIdParameter, jobTypeIdParameter);
        }
    
        public virtual ObjectResult<web_register_company_Result> web_register_company(string mobile, string mobileVerificationCode, string fullName, string salt, string hashedPassword, string device, string deviceToken, string iPAddress, Nullable<int> downloadFromApplicationId)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var mobileVerificationCodeParameter = mobileVerificationCode != null ?
                new ObjectParameter("MobileVerificationCode", mobileVerificationCode) :
                new ObjectParameter("MobileVerificationCode", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            var hashedPasswordParameter = hashedPassword != null ?
                new ObjectParameter("HashedPassword", hashedPassword) :
                new ObjectParameter("HashedPassword", typeof(string));
    
            var deviceParameter = device != null ?
                new ObjectParameter("Device", device) :
                new ObjectParameter("Device", typeof(string));
    
            var deviceTokenParameter = deviceToken != null ?
                new ObjectParameter("DeviceToken", deviceToken) :
                new ObjectParameter("DeviceToken", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var downloadFromApplicationIdParameter = downloadFromApplicationId.HasValue ?
                new ObjectParameter("DownloadFromApplicationId", downloadFromApplicationId) :
                new ObjectParameter("DownloadFromApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<web_register_company_Result>("web_register_company", mobileParameter, mobileVerificationCodeParameter, fullNameParameter, saltParameter, hashedPasswordParameter, deviceParameter, deviceTokenParameter, iPAddressParameter, downloadFromApplicationIdParameter);
        }
    
        public virtual ObjectResult<web_register_user_Result> web_register_user(string mobile, string mobileVerificationCode, Nullable<int> schoolId, string salt, string hashedPassword, string device, string deviceToken, string iPAddress, Nullable<long> promoterUserId, Nullable<int> downloadFromApplicationId)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var mobileVerificationCodeParameter = mobileVerificationCode != null ?
                new ObjectParameter("MobileVerificationCode", mobileVerificationCode) :
                new ObjectParameter("MobileVerificationCode", typeof(string));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            var hashedPasswordParameter = hashedPassword != null ?
                new ObjectParameter("HashedPassword", hashedPassword) :
                new ObjectParameter("HashedPassword", typeof(string));
    
            var deviceParameter = device != null ?
                new ObjectParameter("Device", device) :
                new ObjectParameter("Device", typeof(string));
    
            var deviceTokenParameter = deviceToken != null ?
                new ObjectParameter("DeviceToken", deviceToken) :
                new ObjectParameter("DeviceToken", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var promoterUserIdParameter = promoterUserId.HasValue ?
                new ObjectParameter("PromoterUserId", promoterUserId) :
                new ObjectParameter("PromoterUserId", typeof(long));
    
            var downloadFromApplicationIdParameter = downloadFromApplicationId.HasValue ?
                new ObjectParameter("DownloadFromApplicationId", downloadFromApplicationId) :
                new ObjectParameter("DownloadFromApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<web_register_user_Result>("web_register_user", mobileParameter, mobileVerificationCodeParameter, schoolIdParameter, saltParameter, hashedPasswordParameter, deviceParameter, deviceTokenParameter, iPAddressParameter, promoterUserIdParameter, downloadFromApplicationIdParameter);
        }
    
        public virtual ObjectResult<wechat_job_get_search_campus_detail_Result> wechat_job_get_search_campus_detail(Nullable<int> schoolId)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<wechat_job_get_search_campus_detail_Result>("wechat_job_get_search_campus_detail", schoolIdParameter);
        }
    
        public virtual ObjectResult<wechat_job_search_activity_Result> wechat_job_search_activity(Nullable<int> regionId, Nullable<int> positionId, Nullable<int> order, Nullable<int> termId, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var positionIdParameter = positionId.HasValue ?
                new ObjectParameter("PositionId", positionId) :
                new ObjectParameter("PositionId", typeof(int));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<wechat_job_search_activity_Result>("wechat_job_search_activity", regionIdParameter, positionIdParameter, orderParameter, termIdParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<wechat_job_search_campus_Result> wechat_job_search_campus(Nullable<int> regionId, Nullable<int> schoolId, Nullable<int> categoryId, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<wechat_job_search_campus_Result>("wechat_job_search_campus", regionIdParameter, schoolIdParameter, categoryIdParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<wechat_job_search_intern_Result> wechat_job_search_intern(Nullable<int> regionId, Nullable<int> categoryId, Nullable<int> order, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<wechat_job_search_intern_Result>("wechat_job_search_intern", regionIdParameter, categoryIdParameter, orderParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<wechat_job_search_service_Result> wechat_job_search_service(Nullable<int> regionId, Nullable<int> positionId, Nullable<int> order, Nullable<int> termId, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var positionIdParameter = positionId.HasValue ?
                new ObjectParameter("PositionId", positionId) :
                new ObjectParameter("PositionId", typeof(int));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<wechat_job_search_service_Result>("wechat_job_search_service", regionIdParameter, positionIdParameter, orderParameter, termIdParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<wechat_job_search_tutor_Result> wechat_job_search_tutor(Nullable<int> regionId, Nullable<int> paperId, Nullable<int> order, Nullable<int> termId, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var paperIdParameter = paperId.HasValue ?
                new ObjectParameter("PaperId", paperId) :
                new ObjectParameter("PaperId", typeof(int));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<wechat_job_search_tutor_Result>("wechat_job_search_tutor", regionIdParameter, paperIdParameter, orderParameter, termIdParameter, pageIndexParameter, pageSizeParameter);
        }
    }
}
